<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PHP on ARAE</title><link>https://arae.cc/tags/php.html</link><description>Recent content in PHP on ARAE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Wed, 14 Mar 2018 23:49:26 +0800</lastBuildDate><atom:link href="https://arae.cc/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>Bing每日壁纸API接口「十个国家版本」</title><link>https://arae.cc/post/25782.html</link><pubDate>Wed, 14 Mar 2018 23:49:26 +0800</pubDate><guid>https://arae.cc/post/25782.html</guid><description>前言 (瞎BB..) 这次在原有的国内版(中国)、国际版(美国)基础上又加了日本、印度、巴西、法国、德国、加拿大、澳大利亚、英国八个地区版本，不过就是图片重复率有点高，建议随便选个一直用@pp{你懂的} 接口在调用的时候空参数默认为「国际版(美国)302到图片地址」，而且POST方法仅支持返回JSON。 接口(API) 接口： //api.arae.cc/?p=bing 参数： s 地区版本，默认 0 ，可空 0 =&amp;gt; 美国 EN-US 1 =&amp;gt; 中国 ZH-CN 2 =&amp;gt; 日本 JA-JP 3 =&amp;gt; 印度 EN-IN 4 =&amp;gt; 巴西 PT-BR 5 =&amp;gt; 法国 FR-FR 6 =&amp;gt; 德国 DE-DE 7 =&amp;gt; 加拿大 EN-CA 8 =&amp;gt; 澳大利亚 EN-AU 9 =&amp;gt; 英国 EN-GB code json = 返回utf8 json数据(包括日期、地址、说明); null/undefined 或 其他则自动302到图片地址(可直接img标签调用); key 其实这个打算写出来自己用的，如果想用可以到留言板留言...具体格式参照api.arae.cc首页申请格式.. 返回参数说明 { &amp;quot;time&amp;quot;:&amp;quot;20180313&amp;quot;, /* 时间 */ &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-13&amp;quot;, /* 开始时间 */ &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, /* 结束时间 */ &amp;quot;region&amp;quot;:&amp;quot;ZH-CN&amp;quot;, /* 缩写 */ &amp;quot;url&amp;quot;:&amp;quot;***.jpg&amp;quot;, /* 图片链接 */ &amp;quot;text&amp;quot;:&amp;quot;****&amp;quot; /* 图片相关说明 */ } 调用方法 GET: 返回 「中国版」 json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json&amp;amp;s=1 { &amp;quot;time&amp;quot;:&amp;quot;20180313&amp;quot;, &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-13&amp;quot;, &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, &amp;quot;region&amp;quot;:&amp;quot;ZH-CN&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/ToroidalBubble_ZH-CN10711997835_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;小巴哈马浅滩中的大西洋花斑原海豚和气泡环，巴哈马 (© Hiroya Minakuchi/Minden Pictures)&amp;quot; } 返回 「美国版」 json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180314&amp;quot;, &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-15&amp;quot;, &amp;quot;region&amp;quot;:&amp;quot;EN-US&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/ToroidalBubble_EN-US9481815479_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;Atlantic spotted dolphins</description></item><item><title>Bing每日图片(壁纸)API接口</title><link>https://arae.cc/post/25776.html</link><pubDate>Tue, 27 Feb 2018 00:22:20 +0800</pubDate><guid>https://arae.cc/post/25776.html</guid><description>前言 (瞎BB..) [NEW] Bing每日壁纸API接口「十个国家版本」 Bing图片每日更新，对于这一点感觉挺不错的，如果能够把Bing每日图片作为博客背景是不是很不错呢？ 在用的时候注意区分下国内版跟国际版，有时候图片一样，但是描述全是鸟文&amp;hellip; 接口在调用的时候空参数默认为(国内版302到图片地址)，而且POST方法仅支持返回JSON。 接口(API) 接口： //api.arae.cc/?p=bing 参数： s 1 = 国内; null/undefined 或 其他值:国际版; code json = 返回utf8 json数据(包括日期、地址、说明); null/undefined 或 其他则自动302到图片地址(可直接img标签调用); key 其实这个打算写出来自己用的，如果想用可以到留言板留言...具体格式参照api.arae.cc首页申请格式.. PS:分辨率是 1920x1080 调用方法 GET: 返回 [国内版] json数据(utf8) //api.arae.cc/?p=bing&amp;amp;s=1&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180226&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/CactiIslaPescado_ZH-CN11317505000_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;玻利维亚乌尤尼盐湖的仙人掌岛 (? Alex Saberi/Getty Images)&amp;quot; } 返回 [国际版] 版json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180226&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/WoolBaySeadragon_EN-US12559454946_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;A leafy seadragon in the waters off Wool Bay, Australia (? Alex Mustard/Minden Pictures)&amp;quot; } 返回 [国内版] 图片 //api.arae.cc/?p=bing&amp;amp;s=1 Html: &amp;lt;img src=&amp;quot;//api.arae.cc/?p=bing&amp;amp;s=1&amp;quot; title=&amp;quot;Bing每日图片(壁纸) 国内版&amp;quot;&amp;gt; Markdown: ![&amp;quot;Bing每日图片(壁纸) 国内</description></item><item><title>PHP导出Excel、CSV文件，并解决显示不正常等问题</title><link>https://arae.cc/post/25765.html</link><pubDate>Mon, 09 Oct 2017 19:23:11 +0800</pubDate><guid>https://arae.cc/post/25765.html</guid><description>最近一直在折腾PHP，无意间想实现个导出表格的功能。 不料用了header声明后的表格中文是乱码的，后来通过转字符、添加字母符号、style等方法才得以让excel导出后显示正常了。 为了解决部分MySQL环境设置问题，又添加了一个CSV的导出方法。 导出Excel代码 header(&amp;quot;Content-type:application/vnd.ms-excel;charset=UTF-8&amp;quot;); header(&amp;quot;Content-Disposition:attachment;filename=xxxxx.xls&amp;quot;); //输出标题 echo &amp;quot;&amp;lt;table border=&#39;1&#39;&amp;gt;&amp;quot;; echo &amp;quot;&amp;lt;th&amp;gt;&amp;quot;.mb_convert_encoding($str, &amp;quot;GBK&amp;quot;,&amp;quot;UTF-8&amp;quot;).&amp;quot;&amp;lt;/th&amp;gt;&amp;quot;; echo &amp;quot;&amp;lt;th&amp;gt;&amp;quot;.mb_convert_encoding($str, &amp;quot;GBK&amp;quot;,&amp;quot;UTF-8&amp;quot;).&amp;quot;&amp;lt;/th&amp;gt;&amp;quot;; echo &amp;quot;&amp;lt;th&amp;gt;&amp;quot;.mb_convert_encoding($str, &amp;quot;GBK&amp;quot;,&amp;quot;UTF-8&amp;quot;).&amp;quot;&amp;lt;/th&amp;gt;&amp;quot;; #.... //输出每行的内容 for ($i=0; $i &amp;lt; count($Data); $i++) { echo &amp;quot;&amp;lt;tr&amp;gt;&amp;quot;; for ($n=0; $n &amp;lt; count($Data[$i]); $n++) { //添加 style=&#39;vnd.ms-excel.numberformat:@&#39; 将内容作为字符串识别 echo &amp;quot;&amp;lt;td style=&#39;vnd.ms-excel.numberformat:@&#39;&amp;gt;&amp;quot;; echo mb_convert_encoding($Data[$i][$n],&amp;quot;GBK&amp;quot;,&amp;quot;UTF-8&amp;quot;); echo &amp;quot;&amp;lt;/td&amp;gt;&amp;quot;; } echo &amp;quot;&amp;lt;/tr&amp;gt;&amp;quot;; } echo &amp;quot;&amp;lt;/table&amp;gt;&amp;quot;; 导出CSV代码 /** * 导出CSV文件 * @param string $fileName 文件名字 * @param string|array $data 导出数据，csv格式的字符串|数值数组 * @param string $to_encoding 目标转换编码 * @param string $from_encoding 当前编码 */ function exportCSV($fileName = &#39;&#39;, $data = &#39;&#39;, $to_encoding = &#39;gb2312&#39;, $from_encoding = &#39;utf-8&#39;) { $fileName = empty($fileName) ? date(&#39;YmdHis&#39;) : $fileName; // 文件标签 Header(&amp;quot;Content-type: application/octet-stream&amp;quot;); header(&amp;quot;Content-type: application/vnd.ms-excel; charset=$from_encoding&amp;quot;); Header(&amp;quot;Content-Disposition: attachment; filename=$fileName.csv&amp;quot;); $str = &#39;&#39;; if($data) { if(is_array($data)) { foreach ($data as $v) { if(is_array($v)) { foreach ($v as $vo) { $str .= (is_numeric($vo) ? &amp;quot;&#39;&amp;quot;.$vo : $vo.&amp;quot;&amp;quot;).&amp;quot;,&amp;quot;; } $str = trim($str, &amp;quot;,&amp;quot;).&amp;quot;\r\n&amp;quot;; } else { $str .= (is_numeric($v) ? &amp;quot;&#39;&amp;quot;.$v : $v).&amp;quot;,&amp;quot;; } } $str = trim($str, &amp;quot;,&amp;quot;).&amp;quot;\r\n&amp;quot;; } else { $str = $data; } } echo mb_convert_encoding($str, &amp;quot;gb2312&amp;quot;, &amp;quot;utf-8&amp;quot;); exit; } exportCSV($fileName=$str,$data = $Data); ?&amp;gt;</description></item><item><title>那些出现在电影中的程序代码</title><link>https://arae.cc/post/25722.html</link><pubDate>Fri, 15 Jul 2016 13:09:06 +0800</pubDate><guid>https://arae.cc/post/25722.html</guid><description>高科技无关的电影也偶尔会出现一些跟计算机相关的镜头。文本搜罗的是在各种电影中出现过的代码，它们有的是黑客脚本，有的是绝密文件，有的就是为了摆酷，文中对这些代码都有截屏，你是否能看出它们是什么语言？ 《钢铁侠》，c语言 最近我重新看了一遍《钢铁侠》，发现了一些有趣的事情。在钢铁侠的人工心脏第一次“初始化启动”期间，在那个“恐怖分子”的洞穴里，一些长长短短的C语言代码出现在那个伪造的笔记本电脑屏幕上。 屏幕上的这些代码，尽管从语法上看是少了一些重要的字符，例如分号，但的确是有效的C语言代码。写的非常规范，以至于我想弄清楚这些代码是从哪里来的。 使用谷歌一搜，我就找到了它。这段代码实际上是这样的： send[0] = 0x65; send[1] = 1; send[2] = 3; send[3] = 5; send[4] = 7; send[5] = 11; if (rcx_sendrecv(fd, send, 6, recv, 1, 50, RETRIES, use_comp) != 1) { fprintf(stderr, &amp;quot;%s: delete firmware failed\n&amp;quot;, progname); exit(1); } /* Start firmware download */ send[0] = 0x75; send[1] = (start &amp;gt;&amp;gt; 0) &amp;amp; 0xff; send[2] = (start &amp;gt;&amp;gt; 8) &amp;amp; 0xff; send[3] = (cksum &amp;gt;&amp;gt; 0) &amp;amp; 0xff; send[4] = (cksum &amp;gt;&amp;gt; 8) &amp;amp; 0xff; send[5] = 0; if (rcx_sendrecv(fd, send, 6, recv, 2, 50, RETRIES, use_comp) != 2) { fprintf(stderr, &amp;quot;%s: start firmware download failed\n&amp;quot;, progname); exit(1); } /* Transfer data */ addr = 0; index = 1; for (addr = 0, index = 1; addr &amp;lt; len; addr += size, index++) { 上面的这段代码来自一个乐高积木(LEGO，一种可编程的积木游戏)的固件下载程序，由斯坦福大学的Kekoa Proudfoot写于1998年。你可以从这里下载完成的程序</description></item><item><title>Zend Studio 13.0(PHP集成开发环境)</title><link>https://arae.cc/post/25647.html</link><pubDate>Sat, 25 Jun 2016 14:34:51 +0800</pubDate><guid>https://arae.cc/post/25647.html</guid><description>特点 1.快速代码开发与配置本地和远程调试器； 2.数据库连通性 &amp;amp; SQL工具 团队合作环境； 3.完全 PHP 4/PHP 5 切换 PHPDocs/PHP文档处理程序支持SFTP, FTP以至SSH的安全连接 100个以上代码摘录； 4.50个以上样品数据库应用程序 与Zend Platform组合。[1] Zend Studio是当今最伟大的PHP集成开发环境 Zend Studio包括了PHP开发所有必须的部件，通过一整套编辑、调试、分析、优化和数据库工具，使用Zend Studio 缩短了开发周期，并简化了复杂的应用方案，毋庸置疑，其已经是当今世上最强大的PHP集成开发环境。 Zend Studio的强大之处，除了一般编辑器所具有的代码高亮，语法自动缩进，书签功能外，它内置的调试器更是无可挑剔，支持本地和远程（debug server）两种调试模式，支持诸如跟踪变量、单步运行、断点、堆栈信息、函数调用、查看实时输出等多种高级调试功能。另外，最新版（Zend Studio 10.01）对中文的支持也是非常稳定的。 主要组件 专业的集成开发环境内置编辑器, 调试器, 以及帮助文档 Windows, Linux, Mac 等多个操作系统版本 多语言支持 专业的编辑器 关键字、语法加亮显示 (PHP, HTML, XHTML, and Javascript) XML&amp;amp; CSS的关键字、语法加亮显示 代码</description></item></channel></rss>