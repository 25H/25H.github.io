<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HTML on ARAE</title><link>https://arae.cc/tags/html.html</link><description>Recent content in HTML on ARAE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 26 Jul 2018 20:51:45 +0800</lastBuildDate><atom:link href="https://arae.cc/tags/html/index.xml" rel="self" type="application/rss+xml"/><item><title>前端上传图片并实现预览</title><link>https://arae.cc/post/25793.html</link><pubDate>Thu, 26 Jul 2018 20:51:45 +0800</pubDate><guid>https://arae.cc/post/25793.html</guid><description>在实际项目应用中，经常会使用到上传图片，并且可以让用户直接预览图片。对于此种做法有两种方法可以实现：一是前后台交互，后台将图片地址返回前端； 二是，使用FileReader对象——允许Web应用程序异步读取存储在用户计算机上的文件（或原始数据缓冲区）的内容；此种方法可以优化图片加载速度，减少方法一占用带宽的问题； &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;quot;js/jquery-1.8.3.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;input type=&amp;quot;file&amp;quot; id=&amp;quot;file&amp;quot; /&amp;gt; &amp;lt;img class=&amp;quot;img&amp;quot; id=&amp;quot;img&amp;quot; src=&amp;quot;&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt; &amp;lt;script&amp;gt; var File = document.getElementById(&#39;file&#39;); File.onchange = function(e){ var file = this.files[0]; console.log(this.files[0]) var reader = new FileReader(); reader.readAsDataURL(file); reader.onloadend = function (e) { console.log(e.target) document.getElementById(&#39;img&#39;).setAttribute(&amp;quot;src&amp;quot;,e.target.result); //e.target.result就是最后的路径地址 }; } &amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; 关键是reader.readAsDataURL(file)这句，可以把图片转成base64格式，让img标签读取</description></item><item><title>12 个免费图片快速优化和压缩工具</title><link>https://arae.cc/post/25790.html</link><pubDate>Sun, 27 May 2018 08:56:28 +0800</pubDate><guid>https://arae.cc/post/25790.html</guid><description>图像压缩工具允许轻松的进行压缩，编辑和调整图片大小。这些工具支持多种图像格式，如JPEG，PNG，GIF，可以重新大小根据您的需要他们，让您的网站和 Web 应用程序的拥有更快的载入速度。 在这里，编制了12个最佳的图片压缩工具，所有这些都将帮助你压缩你的网站上的图像，节省带宽和提高网站的性能。 1. JPEGMini JPEGmini是一项正在申请专利的照片再压缩技术，可显着缩小照片尺寸而不影响其感知质量。 该技术适用于基准JPEG领域，可生成与任何浏览器，照片软件或支持标准JPEG格式的设备完全兼容的文件。 2. Shrink O’ Matic Shrink O’ Matic是一款AIR应用程序，可轻松（批量）调整图像大小（缩小）。 它处理JPG，GIF和PNG。 只需拖放图像，就可以随意调整大小！ 选项允许您选择输出大小，旋转（支持EXIF数据），名称和位置，格式和水印。 3. Riot Radical Image Optimization Tool（简称RIOT）是一款免费的图像优化工具，可让您在保持最小文件大小的同时在视觉上调整压缩参数。 它使用并排（双视图）或单视图界面来实时比较原始图像和优化图像，并即时查看生成的文件大小。 它轻巧，快速且简单易用，但对于高级用户而言功能强大。 您将能够控制压缩，颜色数量，元数据设置等等，</description></item><item><title>H5 video 视频标签属性详解</title><link>https://arae.cc/post/25788.html</link><pubDate>Sat, 05 May 2018 17:46:18 +0800</pubDate><guid>https://arae.cc/post/25788.html</guid><description>前言 HTML5标签video在PC上显示很简单，就一个标签加资源，很少需要关心其它属性。但放到移动设备上，video的标准，Android和ios有很多区别，另外还有很多各家浏览器特定的属性. video属性 &amp;lt;video id=&amp;quot;video&amp;quot; src=&amp;quot;video.mp4&amp;quot; controls = &amp;quot;true&amp;quot; poster=&amp;quot;images.jpg&amp;quot; /* 视频封面 */ preload=&amp;quot;auto&amp;quot; webkit-playsinline=&amp;quot;true&amp;quot; /* 这个属性是ios 10中设置可以让视频在小窗内播放，也就是不是全屏播放 */ playsinline=&amp;quot;true&amp;quot; /* IOS微信浏览器支持小窗内播放 */ x-webkit-airplay=&amp;quot;allow&amp;quot; x5-video-player-type=&amp;quot;h5&amp;quot; /* 启用H5播放器,是wechat安卓版特性 */ x5-video-player-fullscreen=&amp;quot;true&amp;quot; /* 全屏设置，设置为 true 是防止横屏 */ x5-video-orientation=&amp;quot;portraint&amp;quot; /* 播放器支付的方向， landscape横屏，portraint竖屏，默认值为竖屏 */ style=&amp;quot;object-fit:fill&amp;quot;&amp;gt; &amp;lt;/video&amp;gt; src: 视频的地址 controls: 加上这个属性，Gecko 会提供用户控制，允许用户控制视频的播放，包括音量，跨帧，暂停/恢复播放。 poster: 属性规定视频下载时显示的图像，或者在用户点击播放按钮前显示的图像。如果未设置该属性，则使用视频的第一帧来代替。 preload: 属性规定在页面加载后载入视频。 webkit-playsinline和playsinline: 视频播放时局域播放，不脱离文档流 。但是这个属性比较特别， 需要嵌入网页的APP比如WeChat中UIwebview 的allowsInlineMediaPlayback = YES webview.allowsInlineMediaPlayback</description></item><item><title>新模板暂时弃坑</title><link>https://arae.cc/post/25787.html</link><pubDate>Sat, 21 Apr 2018 22:51:48 +0800</pubDate><guid>https://arae.cc/post/25787.html</guid><description>布局想的好好的写出来之后就感觉特 别扭，暂时丢这以后再说</description></item><item><title>HEXO.NexT 表情测试 - b1</title><link>https://arae.cc/post/25778.html</link><pubDate>Wed, 07 Mar 2018 18:55:41 +0800</pubDate><guid>https://arae.cc/post/25778.html</guid><description>这破东西之前弄过两三次，每次都比这个好@pp{阴险}，最后忘记啥毛病都删了。。 调用代码大概就是@pp/{滑稽}(就当/不存在)中间那个pp方便以后添加其他表情，虽说有个别地方写死了@pp{你懂的}。。 @pp{滑稽}@pp{滑稽}@pp{滑稽}这个魔性的表情我都眼馋很久了@pp{滑稽}@pp{滑稽}@pp{滑稽} @pp{呵呵}@pp{哈哈}@pp{吐舌}@pp{太开心}@pp{笑眼}@pp{花心}@pp{小乖}@pp{乖}@pp{捂嘴笑}@pp{滑稽}@pp{你懂的}@pp{不高兴}@pp{怒}@pp{汗}@pp{黑线}@pp{泪}@pp{真棒}@pp{喷}@pp{惊哭}@pp{阴险}@pp{鄙视}@pp{酷}@pp{啊}@pp{狂汗}@pp{what}@pp{疑问}@pp{酸爽}@pp{呀咩爹}@pp{委屈}@pp{惊讶}@pp{睡觉}@pp{笑尿}@pp{挖鼻}@pp{吐}@pp{犀利}@pp{小红脸}@pp{懒得理}@pp{勉强}@pp{爱心}@pp{心碎}@pp{玫瑰}@pp{礼物}@pp{彩虹}@pp{太阳}@pp{星星月亮}@pp{钱币}@pp{茶杯}@pp{蛋糕}@pp{大</description></item></channel></rss>