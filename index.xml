<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ARAE</title><link>https://arae.cc/</link><description>Recent content on ARAE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 23 Aug 2019 02:16:34 +0800</lastBuildDate><atom:link href="https://arae.cc/index.xml" rel="self" type="application/rss+xml"/><item><title>状态 - 25825</title><link>https://arae.cc/t/25825.html</link><pubDate>Fri, 23 Aug 2019 02:16:34 +0800</pubDate><guid>https://arae.cc/t/25825.html</guid><description>用上Hugo才发现Hexo是真TM方便。😂</description></item><item><title>AMZ 扩展插件管理平台</title><link>https://arae.cc/post/25800.html</link><pubDate>Tue, 01 Jan 2019 12:00:00 +0800</pubDate><guid>https://arae.cc/post/25800.html</guid><description>支持库介绍 一个基于 易语言 深度定制开发的扩展插件管理平台 相关截图 最新版本界面可能与截图有出入。 Win10显示效果更佳 更新说明 [点击进入查看](/post/25763.html) -- 安装/使用 将“AMZ”、“lib”两个目录复制到易语言根目录下 打开易语言 菜单-&amp;gt;工具-&amp;gt;支持库配置 选择“. AMZ ”支持库 打开易语言 菜单-&amp;gt;工具-&amp;gt;AMZ Settings 勾选将使用的插件 重启易语言 更新方法 到官方Q群文件内下载最新版本助手安装/更新包 删除更新包 AMZ\Config.ini 文件， 如修改过&amp;rsquo;自定义命令名&amp;rsquo;插件配置文件，删除更新包 \AMZ\plugin\mz.r1.cc\Config.ini 文件 将 AMZ、lib目录覆盖到易语言根目录即可， 插件使用方法 打开易语言 菜单-&amp;gt;工具-&amp;gt;AMZ Settings 勾选要使用的插件后重启易语言 插件设置根据设置页面提示是否要重启易语言 注：AMZ(包括内置插件)基于官方原版开发，第三方修改版可能无法正常运行。 插件开发 点击进入查看 插件冲突说明 有的易友加载[AMZ]后，发现易语言关闭不了、关闭会崩溃、或其它的一些问题，这些可能是跟其它的支持库起冲突了，目前发现跟有[ET]支持库有冲突。 确定是否是支持库冲突造成的流程：按住Shift键，然后双</description></item><item><title>AMZ 扩展应用html配置接口</title><link>https://arae.cc/post/25799.html</link><pubDate>Sat, 08 Dec 2018 14:06:19 +0800</pubDate><guid>https://arae.cc/post/25799.html</guid><description>自动保存 自动报错目前仅支持 input textarea select 基础标签。 使用方法： &amp;lt;input type=&amp;quot;text&amp;quot; amz-autosave amz-name=&amp;quot;背景色&amp;quot; value=&amp;quot;#fff&amp;quot; /&amp;gt; 其中 amz-autosave 属性代表开启自动保存功能，amz-name=&amp;quot;&amp;quot; 属性为保存的键名。 其他接口 注：动作参数不区分大小写。 // 定义通讯接口，其中参数一必须为 &#39;api&#39; var SendMsg = function (p1, p2, p3, p4, p5) { return parent.SendMsg(p1, p2, p3, p4, p5); }; /** * 获取AMZ版本 * * AMZver * Major * Minor * Patch * Tag * Name */ // 获取AMZ版本,例子 var AMZver = SendMsg(&#39;API&#39;, &#39;AMZver&#39;, &#39;Name&#39;); // AMZ 完整字符串版本 如：3.1.1_Beta /** * 读写配置项 * * Save * 配置项名 * 写入值( \n会被替换为 #换行符# ) * * Read ( #换行符# 会被替换为\n ) * 配置项名 * 默认值 */ // 读写配置项,例子 // 写配置项 SendMsg(&#39;API&#39;, &#39;Save&#39;, &#39;dataJson&#39;, JSON.stringify(dataJson)); // 读配置项 var dataJson = SendMsg(&#39;API&#39;, &#39;Read&#39;, &#39;dataJson&#39;, &#39;&#39;); _ 更新日期：2018-12-8 _</description></item><item><title>状态 - 25824</title><link>https://arae.cc/t/25824.html</link><pubDate>Fri, 09 Nov 2018 14:06:37 +0800</pubDate><guid>https://arae.cc/t/25824.html</guid><description>国产货果然很差劲。</description></item><item><title>AMZ 扩展应用文件命名规范</title><link>https://arae.cc/post/25798.html</link><pubDate>Fri, 09 Nov 2018 13:46:01 +0800</pubDate><guid>https://arae.cc/post/25798.html</guid><description>dll插件命名 如目录名为mz.r4.compile则将dll插件文件命名为mz.r4.compile.dll html配置命名 如目录名为mz.r4.compile则将dll插件配置文件命名为mz.r4.compile.html 小提示 默认配置文件名为Config.ini</description></item><item><title>状态 - 25823</title><link>https://arae.cc/t/25823.html</link><pubDate>Mon, 24 Sep 2018 18:47:06 +0800</pubDate><guid>https://arae.cc/t/25823.html</guid><description>框架、接口测试什么的最麻烦了..</description></item><item><title>AMZ (API)公共扩展插件编写接口</title><link>https://arae.cc/post/25797.html</link><pubDate>Fri, 21 Sep 2018 23:23:22 +0800</pubDate><guid>https://arae.cc/post/25797.html</guid><description>由 AMZ 预定义或二次封装的一些接口，balabalabala&amp;hellip; .版本 2 .DLL命令 amz_api_OpenSet, , &#34;AMZ.fne&#34;, &#34;amz_api_OpenSet&#34;, 公开, 打开 设置 .参数 szGuid, 文本型, , 插件的GUID，可空 .DLL命令 amz_api_OutText, , &#34;AMZ.fne&#34;, &#34;amz_api_OutText&#34;, 公开, 向输出框发送文本 .参数 szStr, 文本型 .DLL命令 amz_api_OutText_1, , &#34;AMZ.fne&#34;, &#34;amz_api_OutText_1&#34;, 公开, 向输出框发送文本，无版权 .参数 szStr, 文本型 .DLL命令 amz_api_OutTextError, , &#34;AMZ.fne&#34;, &#34;amz_api_OutTextError&#34;, 公开, 向输出框发送文本，带错误提示声音 .参数 szStr, 文本型 .DLL命令 amz_api_OutTextEmpty, , &#34;AMZ.fne&#34;, &#34;amz_api_OutTextEmpty&#34;, 公开, 清空输出框内容 .DLL命令 amz_api_GetRunFunc, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetRunFunc&#34;, 公开, 获取 IDE功能函数地址 .DLL命令 amz_api_GetHwnd, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetHwnd&#34;, 公开, 取易语言自身控件句柄，后期创建的可能获取不到，如果出现重复的ID类型可填写上层ID类名进行二次获取 .参数 nIDDlgItem, 整数型, , 控件ID .参数 szClassName, 文本型, , 类名，可空 .DLL命令 amz_api_GetHwnd_OutText, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetHwnd_OutText&#34;, 公开, 获取 输出框句柄 .DLL命令 amz_api_GetEhWnd, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetEhWnd&#34;, 公开, 获取 易语言主窗口句柄 .DLL命令 amz_api_GetPID, 整数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetPID&#34;, 公开, 获取 易语言进程PID .DLL命令 amz_api_GetEver, 小数型, &#34;AMZ.fne&#34;, &#34;amz_api_GetEver&#34;, 公开, 获取 易语言版本号 .DLL命令 amz_api_GetDir_E, 文本型, &#34;AMZ.fne&#34;, &#34;amz_api_GetDir_E&#34;, 公开, 获取目录 易语言主目录 .DLL命令 amz_api_GetDir_AMZ, 文本型, &#34;AMZ.fne&#34;, &#34;amz_api_GetDir_AMZ&#34;, 公开, 获取目录 AMZ目录 .DLL命令 amz_api_GetDir_Plugin, 文本型, &#34;AMZ.fne&#34;, &#34;amz_api_GetDir_Plugin&#34;, 公开, 获取目录 自身插件目录 .参数 szGuid, 文本型, , 插件的G</description></item><item><title>状态 - 25822</title><link>https://arae.cc/t/25822.html</link><pubDate>Fri, 24 Aug 2018 10:31:50 +0800</pubDate><guid>https://arae.cc/t/25822.html</guid><description>猝于 2018-8-24</description></item><item><title>AMZ 通知消息代码</title><link>https://arae.cc/post/25796.html</link><pubDate>Tue, 21 Aug 2018 16:19:37 +0800</pubDate><guid>https://arae.cc/post/25796.html</guid><description>通知消息代码是沿用自 EIDEA 2.X 的事件处理方式，可避免过多不必要的导出函数与一些未知错误。 AMZ_EVENT_START 代码：10001 参数： 一：易语言窗口句柄 二：自身进程PID 三：主线程ID 返回： NULL 说明： 「AMZ事件_启动」初始化插件（仅在首次启动时加载类似于 &amp;ldquo;_启动子程序&amp;rdquo; ） AMZ_EVENT_READY 代码：10002 参数： 无 返回： NULL 说明： 「AMZ事件_准备就绪」IDE首次准备就绪时，触发此事件 AMZ_EVENT_MSG_ARRIVE 代码：10003 参数： 一：收到的消息(可用 &amp;ldquo;指针到文本()&amp;rdquo; 转换为文本型) 返回： NULL 说明： 「AMZ事件_收到消息」收到消息，配合 &amp;ldquo;amz_api_IPC_SendMsg()&amp;rdquo; 命令可以自由向其他E程序插件发送消息，但发送端不会收到消息。 AMZ_EVENT_CONFIG_CHANGE 代码：10004 参数： 无 返回： NULL 说明： 「AMZ事件_配置被更改」配置被更改，当用户更改了设置时，触发此事件 AMZ_EVENT_CLICK_MENU 代码：10005 参数： 一：菜单数值 返回： NULL 说明： 「AMZ事件_菜单被点击」菜单被点击事件时，触发此事件 AMZ_EVENT_KEYBOARD 代码：10006 参数： 一：键代码 二：按键状态 (1=按下，2=放开,3=单击) 返回： -1拦截，否则放行 说明： 「AMZ事件_操作键盘」当用户操作键盘时，触发此事件 AMZ_EVENT_TOOLS_ITEM_CLICK 代码：10007 参数： 一：数值 返回： NULL 说明： 「A</description></item><item><title>AMZ 扩展应用目录命名规范</title><link>https://arae.cc/post/25795.html</link><pubDate>Mon, 20 Aug 2018 21:43:49 +0800</pubDate><guid>https://arae.cc/post/25795.html</guid><description>扩展应用目录命名需要遵循一定的规则，如果违反这些规则，可能会造成扩展应用无法正常载入。 规范 目录名中允许数字、字母、短横线-、下划线_、小数点.，但尽量不用出现其他字符（如空格、中文字符等），同时建议字母全部统一使用小写字母。 命名参数 参数 必填 默认值 说明 mz. true - 命名空间，必须存在于目录名最前面，否则不会被加载。 R1. ~ R4. false R4. 优先级，其中 R1~R2 启动时加载，R3~R4 就绪后加载。 栗子 如 智能编译 插件将其目录命名为 mz.R3.missing.compile。 mz. AMZ命名空间 R3. 优先级「中下」 （大小写随意） missing. 开发者名，这里可以随意定义，如 arae.cc. 将其定义为网址，或不定义 （你想怎样就怎样..） compile 插件名 &amp;lt;!-- 正确 --&amp;gt; mz.R4.arae.cc.pluginname mz.R4.missing.pluginname mz.r4.arae.cc.plugin_name mz.r4.missing.plugin_name mz.r4.plugin_name mz.plugin_name &amp;lt;!-- 错误 --&amp;gt; R4.mz.arae.cc.pluginname mz.R4.arae.cc.pluginname. mz_R4_missing_pluginname mz-r4-arae.cc.plugin_name r4.missing.plugin_name r4-plugin_name plugin_name &amp;lt;!-- 如果你想给自己找点乐，那就随便了 --&amp;gt; 小提示 如果插件目录名前面没有 mz. 这两个迷一样的字符，那么你的插件也可能也会是个迷&amp;hellip; 不是特殊情况尽量少用 R1~R2 晚一点其实也不错的 目录名不要太长也不要太短</description></item><item><title>20180820-文章删除记录</title><link>https://arae.cc/post/25794.html</link><pubDate>Mon, 20 Aug 2018 21:38:04 +0800</pubDate><guid>https://arae.cc/post/25794.html</guid><description>共计110项 已删除文章列表 200行JS代码实现超级简单的区块链 8行代码在Python3中实现多核并行执行 API - SendMessageA简单示例运用 API 拦截窗口关闭&amp;amp;最大化&amp;amp;最小化消息 Crazy Kids Delphi7简单DirectUI界面源码 E language is what？ EDB易数据库查看器 Faded (Conor Maynard Cover) H5 video 视频标签属性详解 HashMap —— 高效随机存取数据结构 ,文本索引必备 Hello Venus - 我是艺术(I&#39;m Ill) hook禁止外部程序创建新窗口[易语言源码] MDI窗口支持库源码，支持静态编译嗷 PHP导出Excel、CSV文件，并解决显示不正常等问题 p站找的几张图 Win10提示威胁服务已经停止,立即重启的解决方法 Windows10关闭80端口占用 [教程]防止模块被反编译的有效方法（吴总提供）： [转]易语言 360免杀方法心得总结 “大牛”不可缺少的三种文献精读思维模式 《ありがとう》中文名《感谢》 【WebKit内核】EasyCKL开源浏览器库 6.1 支持调试运行了 一分钟明白 VS manifest 原理 不懂技术的人不要对懂技术的人说这很容易实现 为什么“程序猿”常有而“程序媛”不常有？ 为什么我们不要 .NET 程序员 为什么程序员都是夜猫子 为什么谷歌要执行严格的代码编写规范 为啥这么多</description></item><item><title>状态 - 25821</title><link>https://arae.cc/t/25821.html</link><pubDate>Sun, 05 Aug 2018 17:55:55 +0800</pubDate><guid>https://arae.cc/t/25821.html</guid><description>老年痴呆要提前了</description></item><item><title>状态 - 25820</title><link>https://arae.cc/t/25820.html</link><pubDate>Tue, 10 Jul 2018 22:51:15 +0800</pubDate><guid>https://arae.cc/t/25820.html</guid><description>你看,我又加班了！</description></item><item><title>JavaScript如何判断变量是数组还是对象</title><link>https://arae.cc/post/25792.html</link><pubDate>Fri, 15 Jun 2018 15:26:38 +0800</pubDate><guid>https://arae.cc/post/25792.html</guid><description>方法一 通过判断变量的类型，并且变量的length属性(除了有一种例外是arguments对象–当给函数传参时数据存储的地方) var arr=[2,3,4]; var obj={&amp;quot;name&amp;quot;:&amp;quot;maomao&amp;quot;,&amp;quot;age&amp;quot;:20}; console.log(typeof arr); //object console.log(typeof obj); //object console.log(arr.length); //3 console.log(obj.length); //undefined console.log(obj.name); //maomao //这里说明在对象中并没有length属性，所以是未定义。 方法二 使用toString方法将对象转换成其他类型的string，该例很好的证明了arguments对象不是数组，而是对象 var arr=[2,3,4]; var obj={&amp;quot;name&amp;quot;:&amp;quot;maomao&amp;quot;,&amp;quot;age&amp;quot;:20}; // console.log(arr.toString()); //&#39;2,3,4&#39; // console.log(obj.toString()); //[object Object] function sum(a,b){ // console.log(arguments); // console.log(typeof arguments); //object // console.log(arguments.length); //2 根据具体调用函数传的实参决定 // console.log(arguments.toString()); //[object Arguments] return a+b; } alert(sum(3,4)); 方法三 —&amp;gt;不可行 instanceof 指出对象是否是特定类的一个实例。 结论:instanceof 检测一个对象A是不是另一个对象B的实例的原理是：查看对象B的prototype指向的对象是否在对象A的[[prototype]]链上。如果在，则返回true,如果不在则返回false。不过有一个特殊的情况，当对象B的prototype为null将会报错(类似于空指针异常)。 var arr=[2,3,4,&amp;quot;haa&amp;quot;]; var obj={&amp;quot;name&amp;quot;:&amp;quot;maomao&amp;quot;,&amp;quot;age&amp;quot;:20}; console.log(arr instanceof Array); //true console.log(obj instanceof Object); //true console.log(arr instanceof Object); //true // ---这里跟网上的不同，不知道是什么原因 console.log(obj instanceof Array); //false 方法四 ECMAScript 5中可以使用isArray来判断 var arr=[2,3,4,&amp;quot;haa&amp;quot;]; var obj={&amp;quot;name&amp;quot;:&amp;quot;maomao&amp;quot;,&amp;quot;age&amp;quot;:20}; console.log(Array.isArray(arr)); //true console.log(Array.isArray(obj)); //false //注意没有isObject这种方法 暂时 方法五 使用isPrototypeOf()函</description></item><item><title>12 个免费图片快速优化和压缩工具</title><link>https://arae.cc/post/25790.html</link><pubDate>Sun, 27 May 2018 08:56:28 +0800</pubDate><guid>https://arae.cc/post/25790.html</guid><description>图像压缩工具允许轻松的进行压缩，编辑和调整图片大小。这些工具支持多种图像格式，如JPEG，PNG，GIF，可以重新大小根据您的需要他们，让您的网站和 Web 应用程序的拥有更快的载入速度。 在这里，编制了12个最佳的图片压缩工具，所有这些都将帮助你压缩你的网站上的图像，节省带宽和提高网站的性能。 1. JPEGMini JPEGmini是一项正在申请专利的照片再压缩技术，可显着缩小照片尺寸而不影响其感知质量。 该技术适用于基准JPEG领域，可生成与任何浏览器，照片软件或支持标准JPEG格式的设备完全兼容的文件。 2. Shrink O’ Matic Shrink O’ Matic是一款AIR应用程序，可轻松（批量）调整图像大小（缩小）。 它处理JPG，GIF和PNG。 只需拖放图像，就可以随意调整大小！ 选项允许您选择输出大小，旋转（支持EXIF数据），名称和位置，格式和水印。 3. Riot Radical Image Optimization Tool（简称RIOT）是一款免费的图像优化工具，可让您在保持最小文件大小的同时在视觉上调整压缩参数。 它使用并排（双视图）或单视图界面来实时比较原始图像和优化图像，并即时查看生成的文件大小。 它轻巧，快速且简单易用，但对于高级用户而言功能强大。 您将能够控制压缩，颜色数量，元数据设置等等，</description></item><item><title>状态 - 25819</title><link>https://arae.cc/t/25819.html</link><pubDate>Mon, 16 Apr 2018 19:08:06 +0800</pubDate><guid>https://arae.cc/t/25819.html</guid><description>最近打算自己撸一套模板，不过我觉得对半会写到一半弃坑&amp;hellip;</description></item><item><title>状态 - 25818</title><link>https://arae.cc/t/25818.html</link><pubDate>Mon, 19 Mar 2018 20:38:40 +0800</pubDate><guid>https://arae.cc/t/25818.html</guid><description>一天到晚瞎折腾</description></item><item><title>状态 - 25817</title><link>https://arae.cc/t/25817.html</link><pubDate>Sun, 18 Mar 2018 00:44:50 +0800</pubDate><guid>https://arae.cc/t/25817.html</guid><description>php5.2换成5.6才发现一大堆毛病</description></item><item><title>状态 - 25816</title><link>https://arae.cc/t/25816.html</link><pubDate>Fri, 16 Mar 2018 16:22:17 +0800</pubDate><guid>https://arae.cc/t/25816.html</guid><description>评论框改手动加载感觉清爽很多.</description></item><item><title>Bing每日壁纸API接口「十个国家版本」</title><link>https://arae.cc/post/25782.html</link><pubDate>Wed, 14 Mar 2018 23:49:26 +0800</pubDate><guid>https://arae.cc/post/25782.html</guid><description>前言 (瞎BB..) 这次在原有的国内版(中国)、国际版(美国)基础上又加了日本、印度、巴西、法国、德国、加拿大、澳大利亚、英国八个地区版本，不过就是图片重复率有点高，建议随便选个一直用@pp{你懂的} 接口在调用的时候空参数默认为「国际版(美国)302到图片地址」，而且POST方法仅支持返回JSON。 接口(API) 接口： //api.arae.cc/?p=bing 参数： s 地区版本，默认 0 ，可空 0 =&amp;gt; 美国 EN-US 1 =&amp;gt; 中国 ZH-CN 2 =&amp;gt; 日本 JA-JP 3 =&amp;gt; 印度 EN-IN 4 =&amp;gt; 巴西 PT-BR 5 =&amp;gt; 法国 FR-FR 6 =&amp;gt; 德国 DE-DE 7 =&amp;gt; 加拿大 EN-CA 8 =&amp;gt; 澳大利亚 EN-AU 9 =&amp;gt; 英国 EN-GB code json = 返回utf8 json数据(包括日期、地址、说明); null/undefined 或 其他则自动302到图片地址(可直接img标签调用); key 其实这个打算写出来自己用的，如果想用可以到留言板留言...具体格式参照api.arae.cc首页申请格式.. 返回参数说明 { &amp;quot;time&amp;quot;:&amp;quot;20180313&amp;quot;, /* 时间 */ &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-13&amp;quot;, /* 开始时间 */ &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, /* 结束时间 */ &amp;quot;region&amp;quot;:&amp;quot;ZH-CN&amp;quot;, /* 缩写 */ &amp;quot;url&amp;quot;:&amp;quot;***.jpg&amp;quot;, /* 图片链接 */ &amp;quot;text&amp;quot;:&amp;quot;****&amp;quot; /* 图片相关说明 */ } 调用方法 GET: 返回 「中国版」 json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json&amp;amp;s=1 { &amp;quot;time&amp;quot;:&amp;quot;20180313&amp;quot;, &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-13&amp;quot;, &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, &amp;quot;region&amp;quot;:&amp;quot;ZH-CN&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/ToroidalBubble_ZH-CN10711997835_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;小巴哈马浅滩中的大西洋花斑原海豚和气泡环，巴哈马 (© Hiroya Minakuchi/Minden Pictures)&amp;quot; } 返回 「美国版」 json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180314&amp;quot;, &amp;quot;startdate&amp;quot;:&amp;quot;2018-03-14&amp;quot;, &amp;quot;enddate&amp;quot;:&amp;quot;2018-03-15&amp;quot;, &amp;quot;region&amp;quot;:&amp;quot;EN-US&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/ToroidalBubble_EN-US9481815479_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;Atlantic spotted dolphins</description></item><item><title>状态 - 25815</title><link>https://arae.cc/t/25815.html</link><pubDate>Sun, 11 Mar 2018 15:39:55 +0800</pubDate><guid>https://arae.cc/t/25815.html</guid><description>首页顶部加个入口好像没多大用，还特丑</description></item><item><title>HEXO.NexT 表情测试 - b1</title><link>https://arae.cc/post/25778.html</link><pubDate>Wed, 07 Mar 2018 18:55:41 +0800</pubDate><guid>https://arae.cc/post/25778.html</guid><description>这破东西之前弄过两三次，每次都比这个好@pp{阴险}，最后忘记啥毛病都删了。。 调用代码大概就是@pp/{滑稽}(就当/不存在)中间那个pp方便以后添加其他表情，虽说有个别地方写死了@pp{你懂的}。。 @pp{滑稽}@pp{滑稽}@pp{滑稽}这个魔性的表情我都眼馋很久了@pp{滑稽}@pp{滑稽}@pp{滑稽} @pp{呵呵}@pp{哈哈}@pp{吐舌}@pp{太开心}@pp{笑眼}@pp{花心}@pp{小乖}@pp{乖}@pp{捂嘴笑}@pp{滑稽}@pp{你懂的}@pp{不高兴}@pp{怒}@pp{汗}@pp{黑线}@pp{泪}@pp{真棒}@pp{喷}@pp{惊哭}@pp{阴险}@pp{鄙视}@pp{酷}@pp{啊}@pp{狂汗}@pp{what}@pp{疑问}@pp{酸爽}@pp{呀咩爹}@pp{委屈}@pp{惊讶}@pp{睡觉}@pp{笑尿}@pp{挖鼻}@pp{吐}@pp{犀利}@pp{小红脸}@pp{懒得理}@pp{勉强}@pp{爱心}@pp{心碎}@pp{玫瑰}@pp{礼物}@pp{彩虹}@pp{太阳}@pp{星星月亮}@pp{钱币}@pp{茶杯}@pp{蛋糕}@pp{大</description></item><item><title>状态 - 25814</title><link>https://arae.cc/t/25814.html</link><pubDate>Wed, 07 Mar 2018 18:39:47 +0800</pubDate><guid>https://arae.cc/t/25814.html</guid><description>测试一下@pp{吐舌}@pp{滑稽}</description></item><item><title>状态 - 25813</title><link>https://arae.cc/t/25813.html</link><pubDate>Sat, 03 Mar 2018 19:18:22 +0800</pubDate><guid>https://arae.cc/t/25813.html</guid><description>我觉得我应该撸个导航，把常用链接都放里面去&amp;hellip;</description></item><item><title>HTTP协议状态码</title><link>https://arae.cc/post/25777.html</link><pubDate>Fri, 02 Mar 2018 19:09:22 +0800</pubDate><guid>https://arae.cc/post/25777.html</guid><description>HTTP状态码 当浏览者访问一个网页时，浏览者的浏览器会向网页所在服务器发出请求。当浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头(server header)用以响应浏览器的请求。 HTTP状态码的英文为HTTP Status Code。 1xx 信息/临时响应 表示临时响应并需要请求者继续执行操作的状态代码。 这一类型的状态码，代表请求已被接受，需要继续处理。这类响应是临时响应，只包含状态行和某些可选的响应头信息，并以空行结束。由于 HTTP/1.0 协议中没有定义任何 1xx 状态码，所以除非在某些试验条件下，服务器禁止向此类客户端发送 1xx 响应。 100 Continue 状态：继续 说明：请求者应当继续提出请求。 服务器返回此代码表示已收到请求的第一部分，正在等待其余部分。 客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。 101 Switching Protocols 状态：切换协议 说明：请求者已要求服务器切换协议，服务器已确认并准备切换。 服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不</description></item><item><title>Bing每日图片(壁纸)API接口</title><link>https://arae.cc/post/25776.html</link><pubDate>Tue, 27 Feb 2018 00:22:20 +0800</pubDate><guid>https://arae.cc/post/25776.html</guid><description>前言 (瞎BB..) [NEW] Bing每日壁纸API接口「十个国家版本」 Bing图片每日更新，对于这一点感觉挺不错的，如果能够把Bing每日图片作为博客背景是不是很不错呢？ 在用的时候注意区分下国内版跟国际版，有时候图片一样，但是描述全是鸟文&amp;hellip; 接口在调用的时候空参数默认为(国内版302到图片地址)，而且POST方法仅支持返回JSON。 接口(API) 接口： //api.arae.cc/?p=bing 参数： s 1 = 国内; null/undefined 或 其他值:国际版; code json = 返回utf8 json数据(包括日期、地址、说明); null/undefined 或 其他则自动302到图片地址(可直接img标签调用); key 其实这个打算写出来自己用的，如果想用可以到留言板留言...具体格式参照api.arae.cc首页申请格式.. PS:分辨率是 1920x1080 调用方法 GET: 返回 [国内版] json数据(utf8) //api.arae.cc/?p=bing&amp;amp;s=1&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180226&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/CactiIslaPescado_ZH-CN11317505000_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;玻利维亚乌尤尼盐湖的仙人掌岛 (? Alex Saberi/Getty Images)&amp;quot; } 返回 [国际版] 版json数据(utf8) //api.arae.cc/?p=bing&amp;amp;code=json { &amp;quot;time&amp;quot;:&amp;quot;20180226&amp;quot;, &amp;quot;url&amp;quot;:&amp;quot;https://www.bing.com/az/hprichbg/rb/WoolBaySeadragon_EN-US12559454946_1920x1080.jpg&amp;quot;, &amp;quot;text&amp;quot;:&amp;quot;A leafy seadragon in the waters off Wool Bay, Australia (? Alex Mustard/Minden Pictures)&amp;quot; } 返回 [国内版] 图片 //api.arae.cc/?p=bing&amp;amp;s=1 Html: &amp;lt;img src=&amp;quot;//api.arae.cc/?p=bing&amp;amp;s=1&amp;quot; title=&amp;quot;Bing每日图片(壁纸) 国内版&amp;quot;&amp;gt; Markdown: ![&amp;quot;Bing每日图片(壁纸) 国内</description></item><item><title>状态 - 25812</title><link>https://arae.cc/t/25812.html</link><pubDate>Mon, 26 Feb 2018 23:58:21 +0800</pubDate><guid>https://arae.cc/t/25812.html</guid><description>bing接口又特喵的一顿魔改，现在支持json支持国际国内两个版本，支持img表情直接调用&amp;hellip; ヾ(≧∇≦*)ゝ</description></item><item><title>状态 - 25811</title><link>https://arae.cc/t/25811.html</link><pubDate>Mon, 26 Feb 2018 22:03:28 +0800</pubDate><guid>https://arae.cc/t/25811.html</guid><description>调整了下必应的接口&amp;hellip;顺便撤掉post (ㆆᴗㆆ)</description></item><item><title>状态 - 25810</title><link>https://arae.cc/t/25810.html</link><pubDate>Sat, 24 Feb 2018 14:52:24 +0800</pubDate><guid>https://arae.cc/t/25810.html</guid><description>把这里分离出来之后感觉方便多了 OωO</description></item><item><title>状态 - 25809</title><link>https://arae.cc/t/25809.html</link><pubDate>Fri, 23 Feb 2018 18:34:21 +0800</pubDate><guid>https://arae.cc/t/25809.html</guid><description>好吧总共弄到20913条数据，顺手撸了个随机签名api ヾ(≧∇≦*)ゝ</description></item><item><title>状态 - 25808</title><link>https://arae.cc/t/25808.html</link><pubDate>Fri, 23 Feb 2018 17:49:00 +0800</pubDate><guid>https://arae.cc/t/25808.html</guid><description>爬虫开坑&amp;hellip;之前爬完一言才发现有打包好的..这回准备弄一个没人xxx过的新站&amp;hellip;. (ㆆᴗㆆ)</description></item><item><title>注释用的好，可能会挨打！？</title><link>https://arae.cc/post/25773.html</link><pubDate>Fri, 23 Feb 2018 17:19:04 +0800</pubDate><guid>https://arae.cc/post/25773.html</guid><description>一、概述 这是写在前面的话：在开发中的时候，应该、可能、或许会看到有趣的注释 遇到类似的注释能让开发更加的有乐趣，我提倡程序猿继续传承下去这个美好优良传统 二、正文 比如： /** * 描述：XXXX &amp;lt;br&amp;gt; * 作者： XXXX &amp;lt;br&amp;gt; * E-mail: XXXX &amp;lt;br&amp;gt; * 日期： XXXX 下午XXXX &amp;lt;br&amp;gt; */ public class Points implements Serializable { private static final long serialVersionUID = 1L; /** ************************************************************** * * * .=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-. * * | ______ | * * | .-&amp;quot; &amp;quot;-. | * * | / \ | * * | _ | | _ | * * | ( \ |, .-. .-. ,| / ) | * * | &amp;gt; &amp;quot;=._ | )(__/ \__)( | _.=&amp;quot; &amp;lt; | * * | (_/&amp;quot;=._&amp;quot;=._ |/ /\ \| _.=&amp;quot;_.=&amp;quot;\_) | * * | &amp;quot;=._&amp;quot;(_ ^^ _)&amp;quot;_.=&amp;quot; | * * | &amp;quot;=\__|IIIIII|__/=&amp;quot; | * * | _.=&amp;quot;| \IIIIII/ |&amp;quot;=._ | * * | _ _.=&amp;quot;_.=&amp;quot;\ /&amp;quot;=._&amp;quot;=._ _ | * * | ( \_.=&amp;quot;_.=&amp;quot; `--------` &amp;quot;=._&amp;quot;=._/ ) | * * | &amp;gt; _.=&amp;quot; &amp;quot;=._ &amp;lt; | * * | (_/ \_) | * * | | * * &#39;-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=&#39; * * * * LASCIATE OGNI SPERANZA, VOI CH&#39;ENTRATE * ************************************************************** */ /** * 请不要尝试修改属性lng和lat为别的数据类型，相信我，改了之后，你会后悔的。 * 至于原因，创建的时候我应该知道，现在只剩下上帝知道 */ private Integer id; private String markerId; // 标识符 private double lng; private double lat; private String type; private Integer status = 0; // 覆盖物状态：0未添加，1已添加，2已添加并且是已发送的覆盖物 默认值：0 private List&amp;lt;Points&amp;gt; list = new ArrayList&amp;lt;Points&amp;gt;(); ...... 再或者在结尾处加 /* * ┏┓ ┏┓ *┏┛┻━━━┛┻┓ *┃ ┃ *┃ ━ ┃ *┃ ┳┛ ┗┳ ┃ *┃ ┃ *┃ ┻ ┃ *┃ ┃ *┗━┓ ┏━┛ * ┃ ┃神兽保佑 * ┃ ┃代码无BUG！ * ┃ ┗━━━┓ * ┃ ┣┓ * ┃ ┏┛ * ┗┓┓┏━┳┓┏┛ * ┃┫┫ ┃┫┫</description></item><item><title>状态 - 25807</title><link>https://arae.cc/t/25807.html</link><pubDate>Fri, 23 Feb 2018 02:55:55 +0800</pubDate><guid>https://arae.cc/t/25807.html</guid><description>手X这破输入法一点都不好用 凸(艹皿艹 )</description></item><item><title>状态 - 25806</title><link>https://arae.cc/t/25806.html</link><pubDate>Fri, 23 Feb 2018 02:41:00 +0800</pubDate><guid>https://arae.cc/t/25806.html</guid><description>嗯~换个不知道能用多久的评论框，又反复调整相册、碎碎念的布局跟加载效果&amp;hellip;.</description></item><item><title>状态 - 25805</title><link>https://arae.cc/t/25805.html</link><pubDate>Thu, 22 Feb 2018 19:17:17 +0800</pubDate><guid>https://arae.cc/t/25805.html</guid><description>两天就改个颜色 我都有点服我自己了….</description></item><item><title>状态 - 25804</title><link>https://arae.cc/t/25804.html</link><pubDate>Tue, 20 Feb 2018 20:22:48 +0800</pubDate><guid>https://arae.cc/t/25804.html</guid><description>一狠心撸了10年米，现在想想我tm绝对是脑子有病。。</description></item><item><title>状态 - 25803</title><link>https://arae.cc/t/25803.html</link><pubDate>Thu, 15 Feb 2018 13:55:47 +0800</pubDate><guid>https://arae.cc/t/25803.html</guid><description>破相册页总算撸完了，有空再加个分页。。</description></item><item><title>jquery判断图片或者背景图片加载完毕</title><link>https://arae.cc/post/25771.html</link><pubDate>Thu, 15 Feb 2018 13:37:24 +0800</pubDate><guid>https://arae.cc/post/25771.html</guid><description>前端开发制作中有需要需要等到页面中的图片加载完毕后才执行某些事件，而使用jquery的load事件只是dom执行完毕，图片未必加载完成，如果要判断图片加载完毕，需要在图片标签上判断。 使用JavaScript判断图片加载完毕，如果图片在页面中的某个img标签中的话，可以用下面这个 $(&#39;img&#39;).on(&#39;load&#39;, function() { alert(&#39;new image loaded: &#39; + this.src); }); 原生js imgNode.onload = () =&amp;gt; { alert(&#39;new image loaded: &#39; + this.src); }; （1）、单张图片（图片在文档中） // HTML &amp;lt;img id=&#39;pic&#39; src=&amp;quot;../03.png&amp;quot;&amp;gt; //js $(document).ready(function(){ //jquery $(&#39;#pic&#39;).load(function(){ // 加载完成 }); //原生 onload var pic = document.getElementById(&#39;pic&#39;) pic.onload = pic.onreadystatechange = function(){ if(!this.readyState||this.readyState==&#39;loaded&#39;||this.readyState==&#39;complete&#39;){ // 加载完成 } }; }) 注： 1、IE8及以下版本不支持onload事件，但支持onreadystatechange事件； 2、readyState是onreadystatechange事件的一个状态，值为loaded或complete的时候，表示已经加载完毕。 3、如果引入jquery库可以考虑直接使用jquery的load事件来解决兼容问题。 （2）、单张图片（图片动态生成） //js var pic = new Image() pic.src = &#39;../03.png&#39; pic.onload = pic.onreadystatechange = function(){ if(!this.readyState||this.readyState==&#39;loaded&#39;||this.readyState==&#39;complete&#39;){ // 加载完成 } }; //jquery $(&#39;&amp;lt;img/&amp;gt;&#39;).attr(&#39;src&#39;, &#39;../03.png&#39;).on(&#39;load&#39;, function() { $(this).remove(); // 防止内存泄露 //图片加载完毕 }); （3）、单张图片（结合ES6 Promise） //js new Promise((resolve, reject)=&amp;gt;{ let pic = new Image() pic.src = &#39;../03.png&#39; pic.onload = function(){ // 加载完成 resolve(pic) } }).then((pic)=&amp;gt;{ //code }) （4）、多张图片 var img = [], flag = 0,</description></item><item><title>状态 - 25802</title><link>https://arae.cc/t/25802.html</link><pubDate>Wed, 14 Feb 2018 02:08:23 +0800</pubDate><guid>https://arae.cc/t/25802.html</guid><description>Qzone -&amp;gt; wp -&amp;gt; emlog -&amp;gt; lofter -&amp;gt; csdn -&amp;gt; hexo… 就想起这么多..</description></item><item><title>易语言-&gt;编程基础知识-&gt;数据类型</title><link>https://arae.cc/post/25761.html</link><pubDate>Wed, 20 Sep 2017 18:59:29 +0800</pubDate><guid>https://arae.cc/post/25761.html</guid><description>数据类型： 各种数值的数据都在内存中占用一定的存储空间。字节（byte) 是系统中最基本存储单位。数据类型所占字节数越多，所能够容纳数值的范围就越大。 数据类型的概念： 数据：是指能够输入到计算机中，并能够被计算机识别和加工处理的符号的集合，是程序处理的最小对象。例如：数值、字符、图形、图像和声音等都是数据。数据在程序中以常量或变量的方式被引用，不同的数据特点有不同的存储要求和处理算法。 上小学时，我们学过自然数，小数，分数等，其中，1,2,3这样的数叫自然数；-2，-1，0，1，2等的数叫整数；1.1，1.3，1.4，1.66这样的数叫小数。把数据进行这样的区分，在电脑语言里被称做数据类型。 易语言的数据类型从数据结构来区分，可分为基本数据类型、特殊数据类型。 基本数据类型有6种，包括数值型、逻辑型、日期时间型、文本型、字节集型、子程序指针型。 数值型数据又包括了字节型、短整数型、整数型、长整数型、小数型、双精度小数型。数值型数据都是由0-9数字，小数点组成的一个数值。 常用数据类型： 数据类型名称 占用字节 取值范围 字节型 1 0 ～ 255 短整数型 2 -32,768 ～ 32,767 整数型 4 -2,147,483,648 ～ 2,147,483,647 长整数型 8 -9,223,372,036,854,775,808 ～ 9,223,372,036,854,775,807 小数型 4 -3.4E38 ～ 3.4E38 (7位小数) 双精</description></item><item><title>SkinSharp函数文档</title><link>https://arae.cc/post/25760.html</link><pubDate>Sat, 16 Sep 2017 17:38:29 +0800</pubDate><guid>https://arae.cc/post/25760.html</guid><description>错误代码 错误代码： SRET_OK 0 操作成功 SRET_ERROR 1 操作失败 SRET_ERROR_READ 2 皮肤文件读取失败 SRET_ERROR_PARAM 3 参数错误 SRET_ERROR_CREATE 4 创建皮肤失败 SRET_ERROR_FORMAT 5 皮肤格式错误 SRET_ERROR_VERSION 6 皮肤版本错误 SRET_ERROR_PASSWORD 7 皮肤密码错误 SRET_ERROR_INVALID 8 皮肤引擎错误 SkinH_Attach SkinH_Attach： 函数原型：int SkinH_Attach(); 功能：加载程序当前目录下的文件名为skinh.she的皮肤进行换肤 参数：无 返回值：成功返回0，失败返回非0 SkinH_AttachEx SkinH_AttachEx: 函数原型：int SkinH_AttachEx(LPCTSTR strSkin, LPCTSTR strPwd); 功能:加载指定路径的皮肤进行换肤 参数： strSkin 表示的是皮肤文件路径 strPwd 表示的是皮肤密钥 返回值：成功返回0，失败返回非0 SkinH_AttachEx SkinH_AttachEx: 函数原型：int SkinH_AttachEx(LPCTSTR strSkin, LPCTSTR strPwd); 功能:加载指定路径的皮肤进行换肤 参数： strSkin 表示的是皮肤文件路径 strPwd 表示的是皮肤密钥 返回值：成功返回0，失败返回非0 SkinH_AttachRes SkinH_AttachRes: 函数原型：int SkinH_AttachRes(BYTE* pShe, int nSize, LPCTSTR strPwd, int nHue, int nSat, int nBri); 功能：加载指定资源进行换肤并指定相应的色调，饱和度，亮度 参数: pShe 资源皮肤数据指针 nSize 资源皮肤数据长度 strPwd 皮肤密钥 nHue 色调，取值范围-180-180,默认值0 nSat 饱和度，取值范围-100-100,默认值0 nBri 亮度，取值范围-100-100,默认值0 返回值：成功返回0，失败返回非0 SkinH_Detach SkinH_Detach： 函数原型:int SkinH_Detach(); 功能：卸载换肤 (注意:在换肤或者程序退出时换肤库会自动卸载当</description></item><item><title>易语言自定义命令（自定义核心支持库命令名）</title><link>https://arae.cc/post/25757.html</link><pubDate>Sun, 13 Nov 2016 19:26:58 +0800</pubDate><guid>https://arae.cc/post/25757.html</guid><description>此插件为Eapp平台专用插件，平台下载地址：572521856 (QQ群文件)</description></item><item><title>执行命令行说明</title><link>https://arae.cc/post/25756.html</link><pubDate>Tue, 08 Nov 2016 08:35:02 +0800</pubDate><guid>https://arae.cc/post/25756.html</guid><description>{p} = 相对于易语言根目录\AM\Cmd\，注意：后面带有 {f} = 当前编译出去的程序文件全路径 {hide} = 隐藏执行命令行执行的窗口，此标记必须放到第一行。 // = 屏蔽当前行的命令行，屏蔽后将不再执行此命令行。 命令例子： {hide} {p}upx.exe -1 {f} 命令例子说明： 1.隐藏执行窗口 2.执行upx压缩；-1为upx命令；{f}为编译文件路径。</description></item><item><title>API中数据结构大小计算法</title><link>https://arae.cc/post/25755.html</link><pubDate>Sun, 23 Oct 2016 12:40:20 +0800</pubDate><guid>https://arae.cc/post/25755.html</guid><description>我们在调用系统API函数的时候，经常会碰到一个问题，许多的API第一个参数都是结构尺寸（dwSize） 其他语言里有直接取数据结构尺寸大小的命令，但是易语言中没有，可能很多刚接触的易友当时一定很苦恼这个结构到底多大。 其实要计算结构尺寸很简单，首先了解下易语言中的各种数据类型。 易语言中分基本数据类型，复合数据类型两种。 不过我更喜欢把它分为固定长度类型和可变长度类型。 固定长度类型包括： 字节型，短整数型，整数型，长整数型，小数型，双精度小数型 逻辑型，日期时间型，子程序指针型。 可变长度类型包括： 文本型，字节集型，数组型，支持库自定义数据类型，用户自定义数据类型 固定长度类型就是他在程序中占用的内存字节数是固定的，而可变长度的则不固定，比如文本型，文本增加，内存占用就增加，减少就相应减少等等。而支持库提供的其他数据类型和用户自定义数据类型，也是有可能变大或者变小的，这些不能确定长度的就叫做可变长度类型了。 固定长度类型的可以直接代入计算： 字节型：1 字节 短整数型：2字节 整数型：4字节 长整数型：8字节 小数型：4字节 双精度小数型：8字节 逻辑型：4字节 日期时间型：8字节 子程序指针型：4字节 而对于可变长度的：文</description></item><item><title>微信小程序服务器端用什么语言开发？</title><link>https://arae.cc/post/25750.html</link><pubDate>Thu, 29 Sep 2016 15:41:49 +0800</pubDate><guid>https://arae.cc/post/25750.html</guid><description>微信小程序服务器端用什么语言开发？ 首先，比如微信二次开发，可以用java或者php 来做服务器端语言来进行二次开发，那小程序呢？文档写着.js负责业务逻辑，难道服务器端就是纯JS实现？ 包括对数据库的操作吗？ 还是也可以用php？ 其实文档中在request里面可以填写自己的网站地址，那么应该就可以从自己的服务器获取到数据，所以后端什么数据语言都可以。 那这样的话是不是跟ajax差不多啊， 后台PHP处理好后反馈给前端数据又怎么返回？ 服务端语言和前端逻辑没啥关系吧，php，python都行。但是最好用 python，快速开发！php 开发后端会遇到很多问题的。 wx.request发起的是https请求。一个微信小程序，同时只能有5个网络请求连接。</description></item><item><title>一门编程语言的诞生总是有理由的</title><link>https://arae.cc/post/25749.html</link><pubDate>Thu, 29 Sep 2016 15:35:39 +0800</pubDate><guid>https://arae.cc/post/25749.html</guid><description>Kevin Kelleher suggested an interesting way to compare programming languages: to describe each in terms of the problem it fixes. The surprising thing is how many, and how well, languages can be described this way. Algol: Assembly language is too low-level. Pascal: Algol doesn&amp;rsquo;t have enough data types. Modula: Pascal is too wimpy for systems programming. Simula: Algol isn&amp;rsquo;t good enough at simulations. Smalltalk: Not everything in Simula is an object. Fortran: Assembly language is too low-level. Cobol: Fortran is scary. PL/1: Fortran doesn&amp;rsquo;t have enough data types. Ada: Every existing language is missing something. Basic: Fortran is scary. APL: Fortran isn&amp;rsquo;t good enough at manipulating arrays. J: APL requires its own character set. C: Assemby language is too low-level. C++: C is too low-level. Java: C++ is a kludge. And Microsoft is going to crush us. C#: Java is controlled by Sun. Lisp: Turing Machines are an awkward way to describe computation. Scheme: MacLisp is a kludge. T: Scheme has no libraries. Common Lisp: There are too many dialects of Lisp. Dylan: Scheme has no libraries, and Lisp syntax is scary. Perl: Shell scripts/awk/sed are not enough like programming languages. Python: Perl is a kludge. Ruby: Perl is a kludge, and Lisp syntax is scary. Prolog: Programming is not enough like logic. 易语言: 以上所有语言都是英文编程，没有中文编程简单易懂。</description></item><item><title>EIDEA介绍</title><link>https://arae.cc/post/25745.html</link><pubDate>Wed, 14 Sep 2016 11:14:28 +0800</pubDate><guid>https://arae.cc/post/25745.html</guid><description>支持库命令查找 支持直接搜索所有已加载的支持库命令 找到后自动定位 自动引用模块 双击快速引用常用模块 自动加载模块 可以添加你想自动加载的模块到自动加载分类上，当易语言启动时，就自动加载到易语言里。(目前只支持双击易语言主程序新建空程序时才能自动加载) 自定义添加分类功能，程序初始化时自动为你添加了“常用模块”分类 可以添加你经常使用的模块，方便随时加载到易语言，而不用到时找，浪费不必要的时间。 常用便签 看其名知其意，可添加你常用工具软件、易源码、目录。 支持无限分类。 自动备份 可自定义设置多长时间自动备份1次源码。 可指定自动备份的目录路径。 可设置备份时的文件名格式，最大备份的数量。 触发备份：源码的源文件有变动。（自动备份的原理，每次达到指定时间触发备份时，会先去读取你已保存源码的MD5，和最后一次备份的源码MD5进行对比是否一致，如果不一致则备份） 为什么没开了自动备份，但是不起效？ 原因：源码未自动保存。 解决办法，可以开启自动保存功能，或者手动Ctrl+S进行保存，只有源码的源文件变了，才会触发备份。 自动保存 可自定义设置多长时间自动保存一次源码，防止源码因停电或其它原因丢失，造成不可挽回的结果。 模块查看器</description></item><item><title>易语言 取自定义数据类型的大小</title><link>https://arae.cc/post/25744.html</link><pubDate>Sat, 10 Sep 2016 01:37:11 +0800</pubDate><guid>https://arae.cc/post/25744.html</guid><description>先说一下易语言的变量储存机制 易语言有基本数据类型和复合数据类型两种 基本数据类型包括：1. 各种整数 2.各种浮点 3. 逻辑值 他们都是储存在栈上的 大小都是固定的 用不着取 复合类型一般储存在堆上 然后在栈上储存堆上数据的引用 其中有几种比较特殊：字符串 字节集 数组 这两种类型的大小虽然储存在堆上的某个地方 但都有专门的取大小函数 直接调用即可 剩下就是自定义数据类型 比如类或者结构 特别是类 类的数据成员都是私有的 假如你想知道别人写的一个模块里一个类的大小 不可能通过数数据成员的方法得到 那如何取到呢？有人可能提出用“取变量地址”这个函数 可惜的是 “取变量地址”取到的永远是栈上的地址 根据上面所说 栈上地址的内容就是堆上地址 但是易语言没有一个用指针取整数的函数 这就需要用一个系统api：RtlMoveMemory 这个函数跟c语言memcpy的功能一样 但是有了他问题就变得容易的多 声明一个整形变量a q是一个自定义的类或者结构 RtlMoveMemory (取变量地址 (a), 取变量地址 (q), 4) 这样a储存的就是ls在堆区的地址 之后用到一个api：LocalSize 我们都知道堆区内存分配必然用到LocalAlloc/GlobalAlloc 那么也能通过LocalSize取到大小 调</description></item><item><title>颜值测试API，微软小冰颜值，颜值API</title><link>https://arae.cc/post/25740.html</link><pubDate>Wed, 17 Aug 2016 14:56:22 +0800</pubDate><guid>https://arae.cc/post/25740.html</guid><description>微软小冰颜值api http://kan.msxiaobing.com/Api/ImageAnalyze/Process?service=yanzhi 在使用前我们看一下效果 {&amp;quot;msgId&amp;quot;:&amp;quot;1461905520063&amp;quot;,&amp;quot;timestamp&amp;quot;:0,&amp;quot;receiverId&amp;quot;:null,&amp;quot;content&amp;quot;:{&amp;quot;text&amp;quot;:&amp;quot;颜值7.2分，再接再厉！捯饬捯饬，说不定就是男神了呢~&amp;quot;,&amp;quot;imageUrl&amp;quot;:&amp;quot;http:\\\\/\\\\/mediaplatform.trafficmanager.cn\\\\/image\\\\/fetchimage?key=UQAfAC8ABAAAAFcAFgAGABYASgBAADgAMQBFAEQARABGAEEAMgBGADkAQgBGAEYAQwA4AEEANQAxADgAMAA4AEEANgA2ADMAMwBFADMAMAA3AEEA&amp;quot;,&amp;quot;metadata&amp;quot;:{&amp;quot;w&amp;quot;:&amp;quot;scv9isnfUnZbhOfPjNnUjOfir-3Ave_sisfqiuTo</description></item><item><title>EIDE助手-更新日志</title><link>https://arae.cc/post/25763.html</link><pubDate>Fri, 29 Jul 2016 23:08:33 +0800</pubDate><guid>https://arae.cc/post/25763.html</guid><description>3.0 [未发布] 点击转到3x页面 上次修改时间：2018-7-27 00:30:37 2.9 调整 &amp;lsquo;状态夹-&amp;gt;Tools&amp;rsquo; 界面样式 增加 &amp;lsquo;状态夹-&amp;gt;Tools&amp;rsquo; 前景色设置项 修复 &amp;lsquo;状态夹-&amp;gt;Tools&amp;rsquo; 点击后无法跳出循环体 优化多进程通讯消息分发机制 优化SET.EXE设置程序，增加&amp;rsquo;关于&amp;rsquo;页面 修复 &amp;lsquo;智能编译&amp;rsquo; 一处逻辑错误导致无法编译/多次编译问题 修复 &amp;lsquo;F1键展开当前命令参数表&amp;rsquo; 部分情况下失效 SET.EXE设置程序，增加&amp;rsquo;删除无效配置文件&amp;rsquo;，位于 支持库设置-&amp;gt;危险区 工具箱 -&amp;gt; 屏幕取色，增加单击视图区恢复调色板功能 修复 &amp;lsquo;优化配色方案&amp;rsquo; 修改配色失败 修复 &amp;lsquo;模块管理&amp;rsquo; 在特定布局下无法获取句柄 修复 &amp;lsquo;屏蔽修复优化-&amp;gt;自动切换工作夹&amp;rsquo; 失焦BUG 发布时间：2018-7-28 2.8 重写工具箱 -&amp;gt; POST测试 优化工具箱 -&amp;gt; 编码转换 修复模块管理 在特殊情况下出现错位问题 优化工具箱 -&amp;gt; NASM 配色方案</description></item><item><title>EIDE助手（易语言支持库）</title><link>https://arae.cc/post/25762.html</link><pubDate>Fri, 29 Jul 2016 11:56:20 +0800</pubDate><guid>https://arae.cc/post/25762.html</guid><description>支持库介绍 EIDE支持库是一款基于易语言IDE开发的编程工具，提供了很多易语言便携功能。新版本EIDE插件支持库更名为APP助手。自带多种插件，如编程工具，快速引用模块，屏蔽相关信息，智能编译，智能语法等等。 独创插件加载继续，10+插件完美秒开 注：EIDE助手只是辅助支持库，不会增加任何代码编译到你的程序里面 相关截图 最新版本界面可能与截图有出入。 Win10显示效果更佳 更新说明 点击进入查看 安装/使用 将“AM”、“lib”两个目录复制到易语言根目录下 打开易语言 菜单-&amp;gt;工具-&amp;gt;支持库配置 选择“. APP ”支持库 打开易语言 菜单-&amp;gt;工具-&amp;gt;APP管理 勾选将使用的插件 重启易语言 助手更新方法 到官方Q群文件内下载最新版本助手安装/更新包 删除更新包 AM\AppConfig.ini 文件， 如修改过&amp;rsquo;自定义命令名&amp;rsquo;插件配置文件，删除更新包 AM\APP\CC_idy\Config.ini 文件 将 AM、lib目录覆盖到易语言根目录即可， 助手插件使用方法 打开易语言 菜单-&amp;gt;工具-&amp;gt;APP管理 勾选要使用的插件后重启易语言 插件设置根据设置页面提示是否要重启易语言 注：APP平台(包括内置插件)基于官方原版开发，第三方修改版可能无法正常运行。 助手插</description></item><item><title>时钟事件执行时间超出时钟周期问题解释</title><link>https://arae.cc/post/25737.html</link><pubDate>Thu, 21 Jul 2016 14:13:58 +0800</pubDate><guid>https://arae.cc/post/25737.html</guid><description>时钟组件 作为定时器 系统会在设定时间发送 WM_TIMER 消息给消息队列，因为事件处理函数和窗口回调函数都是同线程， 在一个消息未处理完返回之前是不能处理其他事件消息的，也就是一个时钟事件函数未执行完返回之前，系统是不会发送下一个 WM_TIMER 消息到消息队列中的，所以第二个WM_TIMER消息也就是会被忽略掉。 将时钟周期设置为500 1.下面这个例子你会发现 a 和b是同步的数值是相等的就是这个道理 .局部变量 a, 整数型, 静态 .局部变量 b, 整数型, 静态 a ＝ a ＋ 1 调试输出 (“a”, a) 延时 (1000) b ＝ b ＋ 1 调试输出 (“b”, b) 2.第二个例子很有意思，你会发现程序一直在输出a ，而没有输出b，呵呵，你来猜猜是什么原因？ .局部变量 a, 整数型, 静态 .局部变量 b, 整数型, 静态 a ＝ a ＋ 1 调试输出 (“a”, a) 延迟 (1000) b ＝ b ＋ 1 调试输出 (“b”, b) 第二个例子 和第一个例子的区别是把延时（）换成了延迟（），想来看看这两个命令的作用和区别，他们的区别一个是相当于暂停当前线程向下执行，等待设定长时间后在向下执行，但并不处理事件消息； 另一个是在等待中并且处理事件消息。那么为什么会出现这样的结果呢，首先来看一下延迟（）命令 他是在等待中处理消息队列中未决的消息，那么WM_T</description></item><item><title>程序猿专用代码注释:佛祖保佑，永无BUG</title><link>https://arae.cc/post/25736.html</link><pubDate>Wed, 20 Jul 2016 02:17:56 +0800</pubDate><guid>https://arae.cc/post/25736.html</guid><description>逛论坛发现这个,实在是高上大啊 // _ooOoo_ // o8888888o // 88&amp;quot; . &amp;quot;88 // (| -_- |) // O\ = /O // ____/`---&#39;\____ // . &#39; \\| |// `. // / \\||| : |||// \ // / _||||| -:- |||||- \ // | | \\\ - /// | | // | \_| &#39;&#39;\---/&#39;&#39; | | // \ .-\__ `-` ___/-. / // ___`. .&#39; /--.--\ `. . __ // .&amp;quot;&amp;quot; &#39;&amp;lt; `.___\_&amp;lt;|&amp;gt;_/___.&#39; &amp;gt;&#39;&amp;quot;&amp;quot;. // | | : `- \`.;`\ _ /`;.`/ - ` : | | // \ \ `-. \_ __\ /__ _/ .-` / / // ======`-.____`-.___\_____/___.-`____.-&#39;====== // `=---=&#39; // // ............................................. // 佛祖保佑 永无BUG // 佛曰: // 写字楼里写字间，写字间里程序员； // 程序人员写程序，又拿程序换酒钱。 // 酒醒只在网上坐，酒醉还来网下眠； // 酒醉酒醒日复日，网上网下年复年。 // 但愿老死电脑间，不愿鞠躬老板前； // 奔驰宝马贵者趣，公交自行程序员。 // 别人笑我忒疯癫，我笑自己命太贱； // 不见满街漂亮妹，哪个归得程序员？</description></item><item><title>微软修复已存在19年的漏洞</title><link>https://arae.cc/post/25735.html</link><pubDate>Fri, 15 Jul 2016 14:30:31 +0800</pubDate><guid>https://arae.cc/post/25735.html</guid><description>微软发布补丁包修补漏洞，而据研究人员指出，微软修补的一个漏洞（BUG），在Windows95时代就已经存在，这个漏洞在黑市上价值几十万美元。 微软当然不会公开所修补的漏洞从何时存在于系统。 据美国华盛顿邮报网站报道，IBM公司X-Force部门的研究人员弗雷曼（RobertFreeman）进行了爆料。据称，微软本周二修补的一个漏洞中，包括一个存在了至少19年的漏洞，可以让黑客远程操控电脑，十分危险。 据称，这一漏洞在Windows95的第一版中就已存在，不过目前还没有证据证明黑客曾经利用过这个漏洞。 众所周知，有关攻击程序、软件漏洞等存在一个巨大的网络黑市，不良之徒和黑客组织相互交易。弗雷曼透露，这个存在了19年的漏洞，在黑市上价值六位数（几十万美元）。 华盛顿邮报指出，这一案例，也证明修补软件漏洞是一个极富挑战性的工作，即使是微软这样的公司，在严格审查之下，仍然会让漏洞漏网。 实际上，长寿的软件“BUG”不算新鲜事。 2010年，谷歌(微博)的一位工程师发现了一个“17岁”的Windows系统漏洞，存在于32位版系统中，可被黑客用来劫持电脑控制权。 今年九月份，在一个免费的工具软件中，研究人员发现了</description></item><item><title>10个最“优秀”的代码注释</title><link>https://arae.cc/post/25729.html</link><pubDate>Fri, 15 Jul 2016 13:48:46 +0800</pubDate><guid>https://arae.cc/post/25729.html</guid><description>下面是stackoverflow网站上网友针对你看到过的最好的代码注释是什么样的？这个问题给出的回答的前10条： // 亲爱的维护者： // 如果你尝试了对这段程序进行‘优化’， // 并认识到这种企图是大错特错，请增加 // 下面这个计数器的个数，用来对后来人进行警告： // 浪费在这里的总时间 = 39h /** * 致终于来到这里的勇敢的人： 你是被上帝选中的人，英勇的、不辞劳苦的、不眠不修的来修改 我们这最棘手的代码的编程骑士。你，我们的救世主，人中之龙， 我要对你说：永远不要放弃，永远不要对自己失望，永远不要逃走，辜负了自己。 永远不要哭啼，永远不要说再见。永远不要说谎来伤害自己。 */ Exception up = new Exception(&amp;quot;Something is really wrong.&amp;quot;); throw up; // 一些修改1 - 2002/6/7 增加临时的跟踪登录界面 // 一些修改2 - 2007/5/22 我临时的犯傻 #define TRUE FALSE //逗一逗调试程序的傻瓜们 if (/*you*/ $_GET[&#39;action&#39;]) { //celebrate(恭喜) // 如果这段代码好用，那它是Paul DiLascia写的。 //如果不好用，我不知道是谁写的。 //写这段代码的时候，只有上帝和我知道它是干嘛的 //现在，只有上帝知道 // 晕了，以后再修改 // 神奇。勿动。 你有没有更绝的？</description></item><item><title>禁止WebBrowser网页跳转时发出的声音</title><link>https://arae.cc/post/25721.html</link><pubDate>Fri, 15 Jul 2016 13:04:52 +0800</pubDate><guid>https://arae.cc/post/25721.html</guid><description>默认情况下，IE内核的网页浏览框(WebBrowser、CHtmlView、CHtmlDialog等控件)在跳转网页、点击按钮时会发出声音，用CoInternetSetFeatureEnabled这个API可以禁止掉。 易语言代码： .版本 2 .子程序 禁止网页跳转声音 CoInternetSetFeatureEnabled (#FEATURE_DISABLE_NAVIGATION_SOUNDS, #SET_FEATURE_ON_PROCESS, 1) .DLL命令 CoInternetSetFeatureEnabled, 整数型, &amp;quot;urlmon&amp;quot;, &amp;quot;CoInternetSetFeatureEnabled&amp;quot; .参数 FeatureEntry, 整数型, , INTERNETFEATURELIST .参数 dwFlags, 整数型, , DWORD .参数 fEnable, 整数型, , BOOL .常量 FEATURE_DISABLE_NAVIGATION_SOUNDS, &amp;quot;21&amp;quot;, , 禁止跳转声音 .常量 SET_FEATURE_ON_PROCESS, &amp;quot;2&amp;quot;, , 仅对当前进程有效 VC/C++代码： #include &amp;lt;urlmon.h&amp;gt; #ifndef FEATURE_DISABLE_NAVIGATION_SOUNDS #define FEATURE_DISABLE_NAVIGATION_SOUNDS 21 #endif #ifndef SET_FEATURE_ON_PROCESS #define SET_FEATURE_ON_PROCESS 0x00000002 #endif void DisableClickSounds() { CoInternetSetFeatureEnabled((INTERNETFEATURELIST)FEATURE_DISABLE_NAVIGATION_SOUNDS,SET_FEATURE_ON_PROCESS,true); } C#代码： const int FEATURE_DISABLE_NAVIGATION_SOUNDS = 21; const int SET_FEATURE_ON_PROCESS = 0x00000002; [DllImport(&amp;quot;urlmon.dll&amp;quot;)] [PreserveSig] [return: MarshalAs(UnmanagedType.Error)] static extern int CoInternetSetFeatureEnabled( int FeatureEntry, [MarshalAs(UnmanagedType.U4)] int dwFlags, bool fEnable); static void DisableClickSounds() { CoInternetSetFeatureEnabled( FEATURE_DISABLE_NAVIGATION_SOUNDS, SET_FEATURE_ON_PROCESS, true); }</description></item><item><title>EditPlus 注册码</title><link>https://arae.cc/post/25719.html</link><pubDate>Fri, 15 Jul 2016 11:06:22 +0800</pubDate><guid>https://arae.cc/post/25719.html</guid><description>EditPlus 是一款功能强大的文字处理软件。它可以充分的替换记事本，它也提供网页作家及程序设计师许多强悍的功能。支持 HTML、CSS、PHP、ASP、Perl、C/C++、Java、JavaScript、VBScript 等多种语法的着色显示。程序内嵌网页浏览器，其它功能还包含 FTP 功能、HTML 编辑、URL 突显、自动完成、剪贴文本、行列选择、强大的搜索与替换、多重撤销/重做、拼写检查、自定义快捷键，等等&amp;hellip; 用户名：咲音 注册码：E409-14838-C2955-87422-F8968 用户名：Missing丶咲音 注册码：6509-69890-ED8EF-173E4-2AA4F 用户名：exiaoyin 注册码：8290C-849B8-5CF3A-E3CAD-825ED 用户名：freeuser 注册码：375AD-12490-3F1C9-72FF8-43471 用户名：EditPlus 注册码：72938-20D58-9379C-18419-405E2 用户名：572521856 注册码：51765-30C68-E6877-EDF0A-D2E5A 用户名：Administrator 注册码：8659D-4D490</description></item><item><title>常用Windows消息、常量命名参考</title><link>https://arae.cc/post/25717.html</link><pubDate>Thu, 14 Jul 2016 21:22:27 +0800</pubDate><guid>https://arae.cc/post/25717.html</guid><description>在WIN系统常量里，一般会以两到三个字母加个下划线作为前缀，从这些前缀里就能知道是什么类型的常量。 一般情况下，第一个字母为控件的头一个字母，第二个字母是M的是消息(Message)常量，S是风格(Style)常量，N是通知、事件(Notify)。 下面列出一些常量的常量前缀，为大家以后使用API、常量等带来方便。 以下内容由(彬·泪闯天涯)整理，如果发现有什么错误请指正。 如果是使用VB、易语言等需要自己声明常量的开发工具，可以下载一些工具来查询、复制。 a b c WM_ Window Message 窗口消息，一般用在SendMessage，PostMessage这样的消息函数中 SM_ Static Message 静态标签消息 SS_ Static Style 静态标签风格 BM_ Button Message 按钮消息 BS_ Button Style 按钮风格 BN_ Button Notify 按钮通知 EM_ Edit Message 编辑框消息 ES_ Edit Style 编辑框风格 CB_ ComboBox 组合框消息 CBN_ ComboBox Notify 组合框通知 LBM_ ListBox Message 列表框消息 LBS_ ListBox Style 列表框风格 LBN_ ListBox Notify 列表框通知 LVM_ ListView Message 超级列表框(列表视图)消息 LVS_ ListView Style 超级列表框(列表视图)风格 LVN_ ListView Notify 超级列表框(列表视图)通知 TVM_ TreeView Message 树型框(树型视图)消息 TVS_ TreeView Style 树型框(树型视图)风格 TVN_ TreeView Notify 树型框(树型视图)通知 VK_ Virtual Keyboard 虚拟键、键代码</description></item><item><title>Windows窗口消息大全</title><link>https://arae.cc/post/25715.html</link><pubDate>Thu, 14 Jul 2016 13:52:51 +0800</pubDate><guid>https://arae.cc/post/25715.html</guid><description>Windows窗口消息大全 ////////////////////////////////////////////////////////////////////////// #include &amp;quot;AFXPRIV.H&amp;quot;//消息值的定义来源 #include &amp;quot;Dde.h&amp;quot;//DDE消息值的定义来源 #include &amp;quot;CPL.H&amp;quot;//控制面板消息值的定义来源 #include &amp;quot;WFEXT.H&amp;quot;//文件管理器的消息值的定义来源 #include &amp;quot;vfw.h&amp;quot;//视频捕捉的消息值的定义来源 #include &amp;quot;ras.h&amp;quot;//RAS(远程访问服务)的消息值的定义来源 #include &amp;quot;imm.h&amp;quot;//输入法编辑器的消息值的定义来源 #include &amp;quot;tspi.h&amp;quot;//消息值的定义来源 #include &amp;quot;setupapi.h&amp;quot;//消息值的定义来源 ////////////////////////////////////////////////////////////////////////// #ifndef WM_SYSTIMER #define WM_SYSTIMER 0x0118 //(caret blink) #endif #define DRV_EXITAPPLICATION 0x000C //驱动程序消息相关 #define WM_HIBERNATE 0x03FF //WINCE独有的消息(内存资源限制相关) //窗口消息解码 #define IDSTR(MsgID) MsgID,#MsgID typedef struct { DWORD dwMsg; LPCTSTR szMsgText; LPCTSTR szNote; } t_MSGNOTE; static t_MSGNOTE messagesnote[] = { IDSTR(WM_NULL),&amp;quot;空消息,可检测程序是否有响应等&amp;quot;, IDSTR(WM_CREATE),&amp;quot;新建一个窗口&amp;quot;, IDSTR(WM_DESTROY),&amp;quot;销毁一个窗口&amp;q</description></item><item><title>原创软件误报? 杀毒软件厂商误报分析提交地址</title><link>https://arae.cc/post/25651.html</link><pubDate>Fri, 01 Jul 2016 05:07:50 +0800</pubDate><guid>https://arae.cc/post/25651.html</guid><description>为了较快解决病毒误报问题，现将杀毒软件厂商误报分析提交地址整理如下. 1：瑞星安全中心： http://mailcenter.rising.com.cn/FileCheck/ 2：金山安全中心： http://www.ijinshan.com/virus_report/ 3：江民安全中心： http://virusup.jiangmin.com/ 4：赛门铁克安全响应中心 http://www.symantec.com/zh/cn/business/security_response/submitsamples.jsp 5：东方微点： http://service.micropoint.com.cn/mail.php 6：卡巴斯基病毒上报 http://www.kaspersky.com.cn/KL-Services/report-on.htm 7：360安全中心: http://sampleup.sd.360.cn/index.php 8：百度杀毒误报提交 http://anquan.baidu.com/shadu/shadu_form.html 9：QQ管家误报提交 http://guanjia.qq.com/trojan_false.html 360杀毒- 易语言软件开发者误报反馈专页 http://open.soft.360.cn/yyy_report.htm 提交一次，并不意味着只是不报你所提交的这个软件，而是这个特征码，也就是包含这个特征码的易程序都可能被解救。所以希望大家别误报了就自暴自弃的发帖抱怨，做出自己的行动。 卡巴斯基 newvirus@kaspersky.com 附件把被报毒的文件用zip压缩一下加进去，ZIP设置一个密码virus，避免被邮件服务器拦截 Avira(小红伞) http://analysis.avira.com/samples/ 选”可疑的误报” 可到论坛申请深层分析 http://forum.avira.com/wbb/index.php?page=Board&amp;amp;boardID=140 NOD32 samples@eset.com 压缩zip发送 BitDefender support@bitdefender.com 附件一定记得把被报毒的文件用zip压缩一下加进去，ZIP文件可以加密为 infected 赛门铁克（诺顿） https://submit.symantec.com/security_risks/dispute/ https://submit.symantec.com/false_positive/standard/ AVG virus@avg.com zip或rar压缩发送 AVAST virus@avast.com 麦咖啡 sophos https://secure.sophos.com/support/samples/ 提交zip压缩文件 F-PROT http://www.f-prot.com/virusinfo/false_positive_form.html 提交zip 如设置加密 请在Zip archive password写上压缩包密码 F-Secure http://www.f-secure.com/samples/index.html 需要注册，注册成功后直接在Submit a new sample那儿点submit 提交zip压缩文件 VBA32 newvirus@anti-virus.by 提交zip压缩文件 Panda 误报问题可以通过提</description></item><item><title>EIDE助手插件 快速定位</title><link>https://arae.cc/post/25638.html</link><pubDate>Sat, 25 Jun 2016 14:49:50 +0800</pubDate><guid>https://arae.cc/post/25638.html</guid><description>在代码编辑区右侧增加快速定位窗口 列举当前程序集内的子程序，并智能分类，让程序集函数显示的更直观，如：[组件事件][菜单事件][自定义子程序] 单击定位窗口的子程序名称可定位至当前程序集的子程序所在位置 可设置定位窗口是否显示或隐藏 最新版本自带此插件</description></item><item><title>易语言静态编译链接器大全(为EIDE助手准备滴)</title><link>https://arae.cc/post/25677.html</link><pubDate>Sat, 25 Jun 2016 14:44:50 +0800</pubDate><guid>https://arae.cc/post/25677.html</guid><description>本文中的各个链接器收集于网络，汇总在一起，方便广大易友下载使用； 易语言的大部分支持库是 使用 vc6 编译， 所以， 推荐大家使用 vc6的链接器； 如果使用 其他链接库编译出现问题，或 编译出来的程序 运行存在问题，请试试更换 成 vc6 的链接器再次编译测试； 注意，其他链接器需要安装运行库才能运行，有打包一些，在对应的链接器里面 链接器名称说明： VC6核心库都是使用这个编译， 大部分库也是，推荐使用； VC7暂无说明，自行选择判断测试 VC8暂无说明，自行选择判断测试 VC9暂无说明，自行选择判断测试，带运行库 VC2010暂无说明，自行选择判断测试 VC2012暂无说明，自行选择判断测试 VC2013暂无说明，自行选择判断测试 VC2015_gatepase版本款链接器比较挑，开发端电脑必须是 Windows 7 SP1 或以上同时必须安装 VC2015 运行库（已带运行库） VC2015_hauntek版支持EXE和DLL静态编译，DLL公开的子程序名称必须是英文不能是中文！（否则无法识别公开的中文子程序名称而出现错误）支持系统核心支持库等,应用接口支持库不支持（其他支持库你们自行去测试），开发者电脑必须是 Windows 7 SP1 或以上，同时要安装 VC2015 x86 运行库，用户电脑则不需要，只要是 Windows</description></item><item><title>如何编写高质量的易语言代码？</title><link>https://arae.cc/post/25654.html</link><pubDate>Sat, 25 Jun 2016 14:37:51 +0800</pubDate><guid>https://arae.cc/post/25654.html</guid><description>什么是一个高效的软件？一个高效的软件不仅应该比实现同样功能的软件运行得更快，还应该消耗更少的系统资源。程序的时间效率是指运行速度，空间效率是指程序占用内存或者外存的状况。另外程序的效率我们也可以分为全局效率和局部效率。全局效率是指站在整个系统的角度上考虑的效率，局部效率是指站在模块或函数角度上考虑的效率。 使用整数和长整数 提高代码运行速度最简单的方法莫过于使用正确的数据类型了。也许你不相信，但是 正确地选择数据类型可以大幅度提升代码的性能。在大多数情况下，程序员可以将短整数型、小数型和双精度小数型的变量替换为整数（Integer）或长整数（Long）类型的变量，因为易语言处理整数和长整数的能力远远高于处理其它几种数据类型。 在大多数情况下，程序员选择使用小数型或双精度小数型的原因是因为它们能够保存小数。但是小数也可以保存在整数类型的变量中。例如程序中约定有三位小数，那么只需要将保存在整数型变量中的数值除以1000就可以得到结果。根据我的经验，使用整数和长整数替代短整数型、小数型和双精度小数型后，代码的运行速度可以提高将近10倍。 但是我们也不要老是强调使用使用整数和长整数，因为在程序中数据类型</description></item><item><title>软件开发人员的作战手册 - 让程序员活的久一点</title><link>https://arae.cc/post/25686.html</link><pubDate>Sat, 25 Jun 2016 14:36:50 +0800</pubDate><guid>https://arae.cc/post/25686.html</guid><description>1、 程序员的职业准则是：诚实（如实的报告你的状态，风险和出现的问题），守信（承诺完成的任务就要按时完成），尊重（尊重给你的代码提建议的同事，对事不对人）。 2、 写有BUG 的代码和写没有 BUG 的代码花费的时间是一样的。 3、 BUG是会成长的，存活时间越长生命力越顽强。 4、 如果一个笨方法可以解决问题，那它就不是笨方法。 5、 把你的工作分割成小时级的目标任务，你会发现你的工作会轻松很多。 6、 把你要做的工作一条一条的列在纸上，做完一个就打一个勾，你会喜欢打勾的感觉。 7、 不要问客户怎么做，问客户这么做行不行。 8、 让客户给各个功能按优先级排序，也许客户会问“反正所有功能都要完成，为什么还要优先级？”，回答：“如果一个功能做不完要杀头，另一个功能做不完要砍掉胳膊，我还是愿意先做杀头的那个”。 9、 试着跟客户交朋友。 10、 可做可不做的东西都不要做。 11、 业绩考评不一定跟加班时间成正比。 12、 不要提交没有编译过的代码。 13、 不要提交没有测试过的代码。 14、 不要提交没有被REVIEW 的代码。 15、 不要告诉测试人员怎么测试。</description></item><item><title>Zend Studio 13.0(PHP集成开发环境)</title><link>https://arae.cc/post/25647.html</link><pubDate>Sat, 25 Jun 2016 14:34:51 +0800</pubDate><guid>https://arae.cc/post/25647.html</guid><description>特点 1.快速代码开发与配置本地和远程调试器； 2.数据库连通性 &amp;amp; SQL工具 团队合作环境； 3.完全 PHP 4/PHP 5 切换 PHPDocs/PHP文档处理程序支持SFTP, FTP以至SSH的安全连接 100个以上代码摘录； 4.50个以上样品数据库应用程序 与Zend Platform组合。[1] Zend Studio是当今最伟大的PHP集成开发环境 Zend Studio包括了PHP开发所有必须的部件，通过一整套编辑、调试、分析、优化和数据库工具，使用Zend Studio 缩短了开发周期，并简化了复杂的应用方案，毋庸置疑，其已经是当今世上最强大的PHP集成开发环境。 Zend Studio的强大之处，除了一般编辑器所具有的代码高亮，语法自动缩进，书签功能外，它内置的调试器更是无可挑剔，支持本地和远程（debug server）两种调试模式，支持诸如跟踪变量、单步运行、断点、堆栈信息、函数调用、查看实时输出等多种高级调试功能。另外，最新版（Zend Studio 10.01）对中文的支持也是非常稳定的。 主要组件 专业的集成开发环境内置编辑器, 调试器, 以及帮助文档 Windows, Linux, Mac 等多个操作系统版本 多语言支持 专业的编辑器 关键字、语法加亮显示 (PHP, HTML, XHTML, and Javascript) XML&amp;amp; CSS的关键字、语法加亮显示 代码</description></item><item><title>易语言5.5 IDE 全部接口模块 完整插件接口源码</title><link>https://arae.cc/post/25664.html</link><pubDate>Sat, 25 Jun 2016 14:07:45 +0800</pubDate><guid>https://arae.cc/post/25664.html</guid><description>前面的模块吧 编辑-替换指定文本（）的替换参数类型设置错误了应该是 替换参数 不是 参数信息 现在改正了。 下面有个支持库壳有简单的功能，可使用上面模块继续改造添加功能（有易语言工具菜单添加功能） /&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; 链接: http://pan.baidu.com/s/1mhSNK5y 密码: x7kt &amp;lsquo;模块 链接: http://pan.baidu.com/s/1eRXJJ5S 密码: pgwk</description></item><item><title>HP-socket 3.4.3 支持库 (高性能TCP/UDP通讯组件)预支持SSL</title><link>https://arae.cc/post/25644.html</link><pubDate>Sat, 25 Jun 2016 14:04:12 +0800</pubDate><guid>https://arae.cc/post/25644.html</guid><description>易语言的Demo在目录HP-Socket\Demo里面 HPsocket是一款免费的高性能通讯组件，经过本人测试，值得推荐给大家！！！ ( HPsocket的作者很重视易语言用户，对易语言的支持也做到了尽心尽责，不但提供了DLL的支持而且还提供了易语言支持库 ，感动~~~) HP-Socket 是一套通用的高性能 TCP/UDP 通信框架，包含服务端组件、客户端组件和Agent组件，广泛适用于各种不同应用场景的 TCP/UDP 通信系统。HP-Socket 对通信层实现完全封装，应用程序不必关注通信层的任何细节。 为了让使用者能方便快速地学习和使用 HP-Socket ，迅速掌握框架的设计思想和使用方法，特此精心制作了大量 Demo 示例（如：PUSH 模型示例、PULL 模型示例、PACK 模型示例、性能测试示例以及其它编程语言示例）。HP-Socket 目前运行在 Windows 平台，将来会实现跨平台支持。 链接: http://pan.baidu.com/s/1gfHIOnh 密码: 6ysw</description></item><item><title>关于 &amp; 赞助</title><link>https://arae.cc/z/about.html</link><pubDate>Mon, 22 Dec 2014 12:39:04 +0800</pubDate><guid>https://arae.cc/z/about.html</guid><description>关于 { &amp;quot;code&amp;quot;: 200, &amp;quot;msg&amp;quot;: &amp;quot;success&amp;quot;, &amp;quot;user&amp;quot;: [ { &amp;quot;uid&amp;quot;: 1, &amp;quot;nicname&amp;quot;: &amp;quot;25H&amp;quot;, &amp;quot;sex&amp;quot;: undefined, &amp;quot;reside&amp;quot;: &amp;quot;中国 黑龙江 哈尔滨&amp;quot;, &amp;quot;motto&amp;quot;: &amp;quot;There is only one me in this world.&amp;quot;, &amp;quot;contacts&amp;quot;: { &amp;quot;mobile&amp;quot;: null, &amp;quot;QQ&amp;quot;: &amp;quot;505246742&amp;quot;, &amp;quot;email&amp;quot;: [ &amp;quot;505246742[at]qq[dot]com&amp;quot; ], &amp;quot;steam&amp;quot;: &amp;quot;https://steamcommunity.com/profiles/76561198377978539/&amp;quot; }, &amp;quot;skill&amp;quot;: [ &amp;quot;PHP · 渣渣&amp;quot;, &amp;quot;Go · 渣渣&amp;quot;, &amp;quot;Java · 渣渣&amp;quot;, &amp;quot;Python · 渣渣&amp;quot;, &amp;quot;HTML/CSS · 渣渣&amp;quot;, &amp;quot;睡觉/吃饭 · 精通&amp;quot; ], &amp;quot;tag&amp;quot;:[ &amp;quot;90后&amp;quot;, &amp;quot;夜猫子&amp;quot;, &amp;quot;处女座&amp;quot;, &amp;quot;Google党&amp;quot;, &amp;quot;Bug制造者&amp;quot; ] } ], &amp;quot;site&amp;quot;: { &amp;quot;frame&amp;quot;: &amp;quot;Hugo&amp;quot;, &amp;quot;theme&amp;quot;: &amp;quot;Rolla&amp;quot;, &amp;quot;hosted&amp;quot;: [ &amp;quot;Github&amp;quot;, ], &amp;quot;storage&amp;quot;: null, &amp;quot;copyright&amp;quot;: &amp;quot;ARAE.CC&amp;quot;, &amp;quot;license&amp;quot;: &amp;quot;CC BY-NC-SA 4.0&amp;quot;, &amp;quot;license_url&amp;quot;: &amp;quot;https://creativecommons.org/licenses/by-nc-sa/4.0/&amp;quot;, &amp;quot;changeLog&amp;quot;: [ {&amp;quot;date&amp;quot;: &amp;quot;1970/01/01&amp;quot;, &amp;quot;t&amp;quot;: &amp;quot;Hello world.&amp;quot;}, {&amp;quot;date&amp;quot;: &amp;quot;2019/08/20&amp;quot;, &amp;quot;t&amp;quot;: &amp;quot;Hexo迁移到Hugo&amp;quot;}, {&amp;quot;date&amp;quot;: &amp;quot;&amp;quot;, &amp;quot;t&amp;quot;: &amp;quot;&amp;quot;} ] } } 打赏 &amp;amp; 赞助 如果哪篇文章对你有所帮助，且您手头还很宽裕，欢迎打赏赞助我</description></item><item><title>友链 &amp; Link</title><link>https://arae.cc/z/links.html</link><pubDate>Mon, 22 Dec 2014 12:39:04 +0800</pubDate><guid>https://arae.cc/z/links.html</guid><description>.linkpage ul:after { content: &#34; &#34;; clear: both; display: block; } .linkpage li { float: left; width: 48%; position: relative; transition: all .3s ease-out; border-radius: 5px; line-height: 1.3; height: 90px; list-style: none; } .linkpage li:hover { background: rgba(230,244,250,.5); } .linkpage li:hover a h4 { color: #51aded !important; } .linkpage li a { display: block; padding: 0 10px 0 90px; height: 90px; color: #555; } .linkpage li a img { width: 60px; height: 60px; border-radius: 50%; position: absolute; top: 15px; left: 15px; cursor: inherit; } .linkpage li a h4, .linkpage li a p { white-space: nowrap; text-overflow: ellipsis; overflow: hidden; line-height: 1.4; } .linkpage li a h4 { color: #333; font-size: 18px; margin: 0 0 5px 0; transition: .5s; padding-top: 20px; } .linkpage li a p { font-size: 12px; color: #999; margin-top: 5px; line-height: 24px; } @media(max-width:460px) { .linkpage li { width: 97% } .linkpage ul { padding-left: 5px } } dalao们的链接 TianYu 偶尔做个读书人 NicoNeiko 一个神秘的人 吴佳轶 学习的最好方式是分享 Kira 一个神秘的人 Moehentai 一只鹅の瞎扯淡 0wo动漫 兴趣使然的动漫小站 名称 描述 -- 失效的链接 展开/收缩 。。。 名称 描述 -- 交换链接 展开/收缩 我的信息 名称：ARAE 地址：http://arae.cc/ 描述：No one can make you look up unless you&#39;re on your knees 头像： https://secure.gravatar.com/avatar/c9cf6da779f3ebb2dacf789ce218736b?s=200 https://q.qlogo.cn/g?b=qq&amp;amp;nk=505246742&amp;amp;s=640 格式 &amp;nbsp;&amp;nbsp; 发送到：505246742[at]qq[dot]com 名称：*** 地址：*** 描述：*** [可空] 头像：*** [可空] (建议大于100*100，推荐用Gravatar) 位置：*** (首页、内页) PS:首页友链仅支持「名称」、「地址」 友链须知 申请前请先加我为友链 稳定、健康，内容数≥10 Google、Bing、DuckDuckGo 等有收录 没有nofollow标记、搜索引擎可正常抓取 妹纸请无视所有要求</description></item><item><title>项目</title><link>https://arae.cc/z/projects.html</link><pubDate>Mon, 22 Dec 2014 12:39:04 +0800</pubDate><guid>https://arae.cc/z/projects.html</guid><description>名称 属性 创建 首发 状态 链接 AMZ 免费共享 2018.08.01 2019.01.01 维护更新 点击进入 EIDE助手 免费共享 2016.05 - 停更 (转至AMZ) 点击进入 点击进入查看更多作品</description></item><item><title>状态 - 25801</title><link>https://arae.cc/t/25801.html</link><pubDate>Tue, 01 Jan 1980 00:01:01 +0800</pubDate><guid>https://arae.cc/t/25801.html</guid><description>test</description></item><item><title>Markdown 语法整理</title><link>https://arae.cc/post/25645.html</link><pubDate>Thu, 01 Jan 1970 01:00:00 +0800</pubDate><guid>https://arae.cc/post/25645.html</guid><description>概述 Markdown 的目标是实现「易读易写」。 可读性，无论如何，都是最重要的。一份使用 Markdown 格式撰写的文件应该可以直接以纯文本发布，并且看起来不会像是由许多标签或是格式指令所构成。Markdown 语法受到一些既有 text-to-HTML 格式的影响，包括 Setext、atx、Textile、reStructuredText、Grutatext 和 EtText，而最大灵感来源其实是纯文本电子邮件的格式。 总之， Markdown 的语法全由一些符号所组成，这些符号经过精挑细选，其作用一目了然。比如：在文字两旁加上星号，看起来就像*强调*。Markdown 的列表看起来，嗯，就是列表。Markdown 的区块引用看起来就真的像是引用一段文字，就像你曾在电子邮件中见过的那样。 标题 Code # h1 ## h2 ### h3 #### h4 ##### h5 ###### h6 ####### h7 // 错误代码 ######## h8 // 错误代码 ######### h9 // 错误代码 ########## h10 // 错误代码 Demo 注：h1最大，h6最小 分级标题 Code 注：= - 最少可以只写一个，兼容性一般 一级标题 ====================== 二级标题 --------------------- Demo TOC Code 注：根据标题生成目录，兼容性一般 [TOC] Demo 引用 Code &amp;gt; hello world! Demo hello world! Code-2 [多行式] &amp;gt; hello world! hello world! hello world! 或者 &amp;gt; hello world! hello world! hello world! Demo-2 [多行式] 结果相同 hello world! hello world! hello world! Code-3 [多层嵌套] &amp;gt; aaaaaaaaa &amp;gt;&amp;gt; bbbbbbbbb &amp;gt;&amp;gt;&amp;gt; cccccccccc Demo-3 [多层嵌套] aaaaaaaaa bbbbbbbbb cccccccccc Code-4 [多层多个元素] 注：代码前 3个</description></item><item><title>Hello World</title><link>https://arae.cc/post/25642.html</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0800</pubDate><guid>https://arae.cc/post/25642.html</guid><description>Hugo Rolla 短代码 ps:忽略{{后的\，支持Markdown 1.标题 /* * title 标题 */ {{\&amp;lt; title title=&amp;quot;测试标题&amp;quot; &amp;gt;}} 2.提示框 /* * color 颜色值(1-4 默认1，可空) */ {{\&amp;lt; alert color=&amp;quot;&amp;quot; &amp;gt;}}测试内容{{\&amp;lt; /alert &amp;gt;}} 测试内容 测试内容 测试内容 测试内容 3.面板 /* * color 颜色值(1-4 默认1，可空) * title 标题(可空) */ {{\&amp;lt; panel color=&amp;quot;&amp;quot; title=&amp;quot;&amp;quot;&amp;gt;}}测试内容{{\&amp;lt; /panel &amp;gt;}} 测试内容 标题 测试内容 标题 测试内容 标题 测试内容 标题 测试内容 4.展开/收缩 /* * title 标题(可空，默认&#39;展开/收缩&#39;) * show 默认显示(可空，默认false) */ {{\&amp;lt; collapse title=&amp;quot;&amp;quot; show=&amp;quot;&amp;quot; &amp;gt;}}测试内容{{\&amp;lt; /collapse &amp;gt;}} 展开/收缩 测试内容 标题 测试内容 标题 测试内容 5.下载按钮 /* * title 标题(可空，默认&#39;点击下载&#39;) * url 下载链接 */ {{\&amp;lt; downbtn title=&amp;quot;下载&amp;quot; url=&amp;quot;&amp;quot; &amp;gt;}} &amp;nbsp;点击下载 &amp;nbsp;下载</description></item></channel></rss>