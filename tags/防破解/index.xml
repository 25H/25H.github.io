<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>防破解 on ARAE</title><link>https://arae.cc/tags/%E9%98%B2%E7%A0%B4%E8%A7%A3.html</link><description>Recent content in 防破解 on ARAE</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 11 Jul 2016 15:52:50 +0800</lastBuildDate><atom:link href="https://arae.cc/tags/%E9%98%B2%E7%A0%B4%E8%A7%A3/index.xml" rel="self" type="application/rss+xml"/><item><title>易语言程序防破解的常用方法</title><link>https://arae.cc/post/25675.html</link><pubDate>Mon, 11 Jul 2016 15:52:50 +0800</pubDate><guid>https://arae.cc/post/25675.html</guid><description>用易语言写过好几个软件了，有些软件也被破解过，想想也是正常的，前几年我也破解别人的软件来着，呵呵！ 也正是因为有过破解软件的经验，所以在防破解这一块的学习上，就觉得很简单了，下面我把我的一些常用经验说一下，有兴趣的朋友可以试一下，呵呵，先说明啊，下面说的只是我的个人经验，大家想比较系统的学习的话，最好是找一些相对专业的教程来看看。 花指令的插入，这当然是有必要的，有人说加了花指令没有什么用，现在的反编译软件基本上都有去除花指令的功能，但是难度它能去我就不加了，给破解者增加一点麻烦事也是好的嘛！ 加壳，现在的很多壳都有自动脱壳工具，那这个壳是加还是不加呢？和上面第一点的理由一样，加！一定要加，你不想你的程序成为初学破解者用来练手吧。 注册方式的选择，就最常用的注册而言，还得是硬件码+注册码的形式，其它的加密狗、网络验证等方式还是没办法普及！ 加密算法的选择，千万别自己写加密算法，如把硬件码拆开，位移，计算，***，最后得到注册码，可以很明确的告诉你，这样做的话，注册机迟早会出现。 选择一些相对成熟的算法，比如说RSA之类的，下一节我们会专门来学习一个RSA的使用。 程序中如何验证注册码，千万别来一个判</description></item></channel></rss>